---
swagger: "2.0"
info:
  title: Google Slides
  description: An API for creating and editing Google Slides presentations.
  contact:
    name: Google
    url: https://google.com
  version: v1
host: slides.googleapis.com
basePath: /
schemes:
- https
paths:
  /v1/presentations/{presentationId}:
    get:
      tags:
      - presentations
      description: Gets the latest version of the specified presentation.
      operationId: slides.presentations.get
      parameters:
      - name: presentationId
        in: path
        description: The ID of the presentation to retrieve.
        required: true
        type: string
        x-reservedExpansion: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Presentation'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/drive.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/presentations
      - Oauth2:
        - https://www.googleapis.com/auth/presentations.readonly
    parameters:
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
  /v1/presentations/{presentationId}:batchUpdate:
    post:
      tags:
      - presentations
      description: |-
        Applies one or more updates to the presentation.

        Each request is validated before
        being applied. If any request is not valid, then the entire request will
        fail and nothing will be applied.

        Some requests have replies to
        give you some information about how they are applied. Other requests do
        not need to return information; these each return an empty reply.
        The order of replies matches that of the requests.

        For example, suppose you call batchUpdate with four updates, and only the
        third one returns information. The response would have two empty replies:
        the reply to the third request, and another empty reply, in that order.

        Because other users may be editing the presentation, the presentation
        might not exactly reflect your changes: your changes may
        be altered with respect to collaborator changes. If there are no
        collaborators, the presentation should reflect your changes. In any case,
        the updates in your request are guaranteed to be applied together
        atomically.
      operationId: slides.presentations.batchUpdate
      parameters:
      - name: body
        in: body
        schema:
          $ref: '#/definitions/BatchUpdatePresentationRequest'
      - name: presentationId
        in: path
        description: The presentation to apply the updates to.
        required: true
        type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/BatchUpdatePresentationResponse'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/drive.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/presentations
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets.readonly
    parameters:
    - $ref: '#/parameters/access_token'
    - $ref: '#/parameters/alt'
    - $ref: '#/parameters/bearer_token'
    - $ref: '#/parameters/callback'
    - $ref: '#/parameters/fields'
    - $ref: '#/parameters/key'
    - $ref: '#/parameters/oauth_token'
    - $ref: '#/parameters/pp'
    - $ref: '#/parameters/prettyPrint'
    - $ref: '#/parameters/quotaUser'
    - $ref: '#/parameters/uploadType'
    - $ref: '#/parameters/upload_protocol'
  /v1/presentations/{presentationId}/pages/{pageId}:
    get:
      tags:
      - meetup-version
      - presentations
      responses:
        200:
          description: Successful response
          schema:
            type: string
      security:
      - Oauth2: []
    parameters:
    - name: presentationId
      in: path
      required: true
      type: string
    - name: pageId
      in: path
      required: true
      type: string
definitions:
  AffineTransform:
    description: "AffineTransform uses a 3x3 matrix with an implied last row of [\
      \ 0 0 1 ]\nto transform source coordinates (x,y) into destination coordinates\
      \ (x', y')\naccording to:\n\n      x'  x  =   shear_y  scale_y  translate_y\
      \  \n      1  [ 1 ]\n\nAfter transformation,\n\n     x' = scale_x * x + shear_x\
      \ * y + translate_x;\n     y' = scale_y * y + shear_y * x + translate_y;\n\n\
      This message is therefore composed of these six matrix elements."
    type: object
    properties:
      scaleX:
        format: double
        description: The X coordinate scaling element.
        type: number
      scaleY:
        format: double
        description: The Y coordinate scaling element.
        type: number
      shearX:
        format: double
        description: The X coordinate shearing element.
        type: number
      shearY:
        format: double
        description: The Y coordinate shearing element.
        type: number
      translateX:
        format: double
        description: The X coordinate translation element.
        type: number
      translateY:
        format: double
        description: The Y coordinate translation element.
        type: number
      unit:
        description: The units for translate elements.
        enum:
        - UNIT_UNSPECIFIED
        - EMU
        - PT
        type: string
  AutoText:
    description: A TextElement kind that represents auto text.
    type: object
    properties:
      content:
        description: The rendered content of this auto text, if available.
        type: string
      style:
        $ref: '#/definitions/TextStyle'
        description: The styling applied to this auto text.
      type:
        description: The type of this auto text.
        enum:
        - TYPE_UNSPECIFIED
        - SLIDE_NUMBER
        type: string
  BatchUpdatePresentationRequest:
    description: Request message for PresentationsService.BatchUpdatePresentation.
    type: object
    properties:
      requests:
        description: A list of updates to apply to the presentation.
        type: array
        items:
          $ref: '#/definitions/Request'
      writeControl:
        $ref: '#/definitions/WriteControl'
        description: Provides control over how write requests are executed.
  BatchUpdatePresentationResponse:
    description: Response message from a batch update.
    type: object
    properties:
      presentationId:
        description: The presentation the updates were applied to.
        type: string
      replies:
        description: |-
          The reply of the updates.  This maps 1:1 with the updates, although
          replies to some requests may be empty.
        type: array
        items:
          $ref: '#/definitions/Response'
      writeControl:
        $ref: '#/definitions/WriteControl'
        description: The updated write control after applying the request.
  Bullet:
    description: Describes the bullet of a paragraph.
    type: object
    properties:
      bulletStyle:
        $ref: '#/definitions/TextStyle'
        description: The paragraph specific text style applied to this bullet.
      glyph:
        description: The rendered bullet glyph for this paragraph.
        type: string
      listId:
        description: The ID of the list this paragraph belongs to.
        type: string
      nestingLevel:
        format: int32
        description: The nesting level of this paragraph in the list.
        type: integer
  ColorScheme:
    description: The palette of predefined colors for a page.
    type: object
    properties:
      colors:
        description: The ThemeColorType and corresponding concrete color pairs.
        type: array
        items:
          $ref: '#/definitions/ThemeColorPair'
  ColorStop:
    description: A color and position in a gradient band.
    type: object
    properties:
      alpha:
        format: float
        description: |-
          The alpha value of this color in the gradient band. Defaults to 1.0,
          fully opaque.
        type: number
      color:
        $ref: '#/definitions/OpaqueColor'
        description: The color of the gradient stop.
      position:
        format: float
        description: |-
          The relative position of the color stop in the gradient band measured
          in percentage. The value should be in the interval [0.0, 1.0].
        type: number
  CreateImageRequest:
    description: Creates an image.
    type: object
    properties:
      elementProperties:
        $ref: '#/definitions/PageElementProperties'
        description: |-
          The element properties for the image.

          When the aspect ratio of the provided size does not match the image aspect
          ratio, the image is scaled and centered with respect to the size in order
          to maintain aspect ratio. The provided transform is applied after this
          operation.

          The PageElementProperties.size property is
          optional. If you don't specify the size, the default size of the image is
          used.

          The PageElementProperties.transform property is
          optional. If you don't specify a transform, the image will be placed at the
          top left corner of the page.
      objectId:
        description: |-
          A user-supplied object ID.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
      url:
        description: |-
          The image URL.

          The image is fetched once at insertion time and a copy is stored for
          display inside the presentation. Images must be less than 50MB in size,
          cannot exceed 25 megapixels, and must be in one of PNG, JPEG, or GIF
          format.

          The provided URL can be at most 2 kB in length. The URL itself is saved
          with the image, and exposed via the Image.source_url field.
        type: string
  CreateImageResponse:
    description: The result of creating an image.
    type: object
    properties:
      objectId:
        description: The object ID of the created image.
        type: string
  CreateLineRequest:
    description: Creates a line.
    type: object
    properties:
      elementProperties:
        $ref: '#/definitions/PageElementProperties'
        description: The element properties for the line.
      lineCategory:
        description: The category of line to be created.
        enum:
        - STRAIGHT
        - BENT
        - CURVED
        type: string
      objectId:
        description: |-
          A user-supplied object ID.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
  CreateLineResponse:
    description: The result of creating a line.
    type: object
    properties:
      objectId:
        description: The object ID of the created line.
        type: string
  CreateParagraphBulletsRequest:
    description: |-
      Creates bullets for all of the paragraphs that overlap with the given
      text index range.

      The nesting level of each paragraph will be determined by counting leading
      tabs in front of each paragraph. To avoid excess space between the bullet and
      the corresponding paragraph, these leading tabs are removed by this request.
      This may change the indices of parts of the text.

      If the paragraph immediately before paragraphs being updated is in a list
      with a matching preset, the paragraphs being updated are added to that
      preceding list.
    type: object
    properties:
      bulletPreset:
        description: |-
          The kinds of bullet glyphs to be used. Defaults to the
          `BULLET_DISC_CIRCLE_SQUARE` preset.
        enum:
        - BULLET_DISC_CIRCLE_SQUARE
        - BULLET_DIAMONDX_ARROW3D_SQUARE
        - BULLET_CHECKBOX
        - BULLET_ARROW_DIAMOND_DISC
        - BULLET_STAR_CIRCLE_SQUARE
        - BULLET_ARROW3D_CIRCLE_SQUARE
        - BULLET_LEFTTRIANGLE_DIAMOND_DISC
        - BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE
        - BULLET_DIAMOND_CIRCLE_SQUARE
        - NUMBERED_DIGIT_ALPHA_ROMAN
        - NUMBERED_DIGIT_ALPHA_ROMAN_PARENS
        - NUMBERED_DIGIT_NESTED
        - NUMBERED_UPPERALPHA_ALPHA_ROMAN
        - NUMBERED_UPPERROMAN_UPPERALPHA_DIGIT
        - NUMBERED_ZERODIGIT_ALPHA_ROMAN
        type: string
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The optional table cell location if the text to be modified is in a table
          cell. If present, the object_id must refer to a table.
      objectId:
        description: The object ID of the shape or table containing the text to add
          bullets to.
        type: string
      textRange:
        $ref: '#/definitions/Range'
        description: The range of text to apply the bullet presets to, based on TextElement
          indexes.
  CreateShapeRequest:
    description: Creates a new shape.
    type: object
    properties:
      elementProperties:
        $ref: '#/definitions/PageElementProperties'
        description: The element properties for the shape.
      objectId:
        description: |-
          A user-supplied object ID.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.
          If empty, a unique identifier will be generated.
        type: string
      shapeType:
        description: The shape type.
        enum:
        - TYPE_UNSPECIFIED
        - TEXT_BOX
        - RECTANGLE
        - ROUND_RECTANGLE
        - ELLIPSE
        - ARC
        - BENT_ARROW
        - BENT_UP_ARROW
        - BEVEL
        - BLOCK_ARC
        - BRACE_PAIR
        - BRACKET_PAIR
        - CAN
        - CHEVRON
        - CHORD
        - CLOUD
        - CORNER
        - CUBE
        - CURVED_DOWN_ARROW
        - CURVED_LEFT_ARROW
        - CURVED_RIGHT_ARROW
        - CURVED_UP_ARROW
        - DECAGON
        - DIAGONAL_STRIPE
        - DIAMOND
        - DODECAGON
        - DONUT
        - DOUBLE_WAVE
        - DOWN_ARROW
        - DOWN_ARROW_CALLOUT
        - FOLDED_CORNER
        - FRAME
        - HALF_FRAME
        - HEART
        - HEPTAGON
        - HEXAGON
        - HOME_PLATE
        - HORIZONTAL_SCROLL
        - IRREGULAR_SEAL_1
        - IRREGULAR_SEAL_2
        - LEFT_ARROW
        - LEFT_ARROW_CALLOUT
        - LEFT_BRACE
        - LEFT_BRACKET
        - LEFT_RIGHT_ARROW
        - LEFT_RIGHT_ARROW_CALLOUT
        - LEFT_RIGHT_UP_ARROW
        - LEFT_UP_ARROW
        - LIGHTNING_BOLT
        - MATH_DIVIDE
        - MATH_EQUAL
        - MATH_MINUS
        - MATH_MULTIPLY
        - MATH_NOT_EQUAL
        - MATH_PLUS
        - MOON
        - NO_SMOKING
        - NOTCHED_RIGHT_ARROW
        - OCTAGON
        - PARALLELOGRAM
        - PENTAGON
        - PIE
        - PLAQUE
        - PLUS
        - QUAD_ARROW
        - QUAD_ARROW_CALLOUT
        - RIBBON
        - RIBBON_2
        - RIGHT_ARROW
        - RIGHT_ARROW_CALLOUT
        - RIGHT_BRACE
        - RIGHT_BRACKET
        - ROUND_1_RECTANGLE
        - ROUND_2_DIAGONAL_RECTANGLE
        - ROUND_2_SAME_RECTANGLE
        - RIGHT_TRIANGLE
        - SMILEY_FACE
        - SNIP_1_RECTANGLE
        - SNIP_2_DIAGONAL_RECTANGLE
        - SNIP_2_SAME_RECTANGLE
        - SNIP_ROUND_RECTANGLE
        - STAR_10
        - STAR_12
        - STAR_16
        - STAR_24
        - STAR_32
        - STAR_4
        - STAR_5
        - STAR_6
        - STAR_7
        - STAR_8
        - STRIPED_RIGHT_ARROW
        - SUN
        - TRAPEZOID
        - TRIANGLE
        - UP_ARROW
        - UP_ARROW_CALLOUT
        - UP_DOWN_ARROW
        - UTURN_ARROW
        - VERTICAL_SCROLL
        - WAVE
        - WEDGE_ELLIPSE_CALLOUT
        - WEDGE_RECTANGLE_CALLOUT
        - WEDGE_ROUND_RECTANGLE_CALLOUT
        - FLOW_CHART_ALTERNATE_PROCESS
        - FLOW_CHART_COLLATE
        - FLOW_CHART_CONNECTOR
        - FLOW_CHART_DECISION
        - FLOW_CHART_DELAY
        - FLOW_CHART_DISPLAY
        - FLOW_CHART_DOCUMENT
        - FLOW_CHART_EXTRACT
        - FLOW_CHART_INPUT_OUTPUT
        - FLOW_CHART_INTERNAL_STORAGE
        - FLOW_CHART_MAGNETIC_DISK
        - FLOW_CHART_MAGNETIC_DRUM
        - FLOW_CHART_MAGNETIC_TAPE
        - FLOW_CHART_MANUAL_INPUT
        - FLOW_CHART_MANUAL_OPERATION
        - FLOW_CHART_MERGE
        - FLOW_CHART_MULTIDOCUMENT
        - FLOW_CHART_OFFLINE_STORAGE
        - FLOW_CHART_OFFPAGE_CONNECTOR
        - FLOW_CHART_ONLINE_STORAGE
        - FLOW_CHART_OR
        - FLOW_CHART_PREDEFINED_PROCESS
        - FLOW_CHART_PREPARATION
        - FLOW_CHART_PROCESS
        - FLOW_CHART_PUNCHED_CARD
        - FLOW_CHART_PUNCHED_TAPE
        - FLOW_CHART_SORT
        - FLOW_CHART_SUMMING_JUNCTION
        - FLOW_CHART_TERMINATOR
        - ARROW_EAST
        - ARROW_NORTH_EAST
        - ARROW_NORTH
        - SPEECH
        - STARBURST
        - TEARDROP
        - ELLIPSE_RIBBON
        - ELLIPSE_RIBBON_2
        - CLOUD_CALLOUT
        - CUSTOM
        type: string
  CreateShapeResponse:
    description: The result of creating a shape.
    type: object
    properties:
      objectId:
        description: The object ID of the created shape.
        type: string
  CreateSheetsChartRequest:
    description: |-
      Creates an embedded Google Sheets chart.

      NOTE: Chart creation requires at least one of the spreadsheets.readonly,
      spreadsheets, drive.readonly, drive.file, or drive OAuth scopes.
    type: object
    properties:
      chartId:
        format: int32
        description: The ID of the specific chart in the Google Sheets spreadsheet.
        type: integer
      elementProperties:
        $ref: '#/definitions/PageElementProperties'
        description: |-
          The element properties for the chart.

          When the aspect ratio of the provided size does not match the chart aspect
          ratio, the chart is scaled and centered with respect to the size in order
          to maintain aspect ratio. The provided transform is applied after this
          operation.
      linkingMode:
        description: |-
          The mode with which the chart is linked to the source spreadsheet. When
          not specified, the chart will be an image that is not linked.
        enum:
        - NOT_LINKED_IMAGE
        - LINKED
        type: string
      objectId:
        description: |-
          A user-supplied object ID.

          If specified, the ID must be unique among all pages and page elements in
          the presentation. The ID should start with a word character [a-zA-Z0-9_]
          and then followed by any number of the following characters [a-zA-Z0-9_-:].
          The length of the ID should not be less than 5 or greater than 50.
          If empty, a unique identifier will be generated.
        type: string
      spreadsheetId:
        description: The ID of the Google Sheets spreadsheet that contains the chart.
        type: string
  CreateSheetsChartResponse:
    description: The result of creating an embedded Google Sheets chart.
    type: object
    properties:
      objectId:
        description: The object ID of the created chart.
        type: string
  CreateSlideRequest:
    description: Creates a new slide.
    type: object
    properties:
      insertionIndex:
        format: int32
        description: |-
          The optional zero-based index indicating where to insert the slides.

          If you don't specify an index, the new slide is created at the end.
        type: integer
      objectId:
        description: |-
          A user-supplied object ID.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
      placeholderIdMappings:
        description: |-
          An optional list of object ID mappings from the placeholder(s) on the layout to the placeholder(s)
          that will be created on the new slide from that specified layout. Can only
          be used when `slide_layout_reference` is specified.
        type: array
        items:
          $ref: '#/definitions/LayoutPlaceholderIdMapping'
      slideLayoutReference:
        $ref: '#/definitions/LayoutReference'
        description: |-
          Layout reference of the slide to be inserted, based on the *current
          master*, which is one of the following:

          - The master of the previous slide index.
          - The master of the first slide, if the insertion_index is zero.
          - The first master in the presentation, if there are no slides.

          If the LayoutReference is not found in the current master, a 400 bad
          request error is returned.

          If you don't specify a layout reference, then the new slide will use the
          predefined layout `BLANK`.
  CreateSlideResponse:
    description: The result of creating a slide.
    type: object
    properties:
      objectId:
        description: The object ID of the created slide.
        type: string
  CreateTableRequest:
    description: Creates a new table.
    type: object
    properties:
      columns:
        format: int32
        description: Number of columns in the table.
        type: integer
      elementProperties:
        $ref: '#/definitions/PageElementProperties'
        description: |-
          The element properties for the table.

          The table will be created at the provided size, subject to a minimum size.
          If no size is provided, the table will be automatically sized.

          Table transforms must have a scale of 1 and no shear components. If no
          transform is provided, the table will be centered on the page.
      objectId:
        description: |-
          A user-supplied object ID.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
      rows:
        format: int32
        description: Number of rows in the table.
        type: integer
  CreateTableResponse:
    description: The result of creating a table.
    type: object
    properties:
      objectId:
        description: The object ID of the created table.
        type: string
  CreateVideoRequest:
    description: Creates a video.
    type: object
    properties:
      elementProperties:
        $ref: '#/definitions/PageElementProperties'
        description: |-
          The element properties for the video.

          The PageElementProperties.size property is
          optional. If you don't specify a size, a default size is chosen by the
          server.

          The PageElementProperties.transform property is
          optional. The transform must not have shear components.
          If you don't specify a transform, the video will be placed at the top left
          corner of the page.
      id:
        description: |-
          The video source's unique identifier for this video.

          e.g. For YouTube video https://www.youtube.com/watch?v=7U3axjORYZ0,
          the ID is 7U3axjORYZ0.
        type: string
      objectId:
        description: |-
          A user-supplied object ID.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
      source:
        description: The video source.
        enum:
        - SOURCE_UNSPECIFIED
        - YOUTUBE
        type: string
  CreateVideoResponse:
    description: The result of creating a video.
    type: object
    properties:
      objectId:
        description: The object ID of the created video.
        type: string
  CropProperties:
    description: |-
      The crop properties of an object enclosed in a container. For example, an
      Image.

      The crop properties is represented by the offsets of four edges which define
      a crop rectangle. The offsets are measured in percentage from the
      corresponding edges of the object's original bounding rectangle towards
      inside, relative to the object's original dimensions.

      - If the offset is in the interval (0, 1), the corresponding edge of crop
      rectangle is positioned inside of the object's original bounding rectangle.
      - If the offset is negative or greater than 1, the corresponding edge of crop
      rectangle is positioned outside of the object's original bounding rectangle.
      - If the left edge of the crop rectangle is on the right side of its right
      edge, the object will be flipped horizontally.
      - If the top edge of the crop rectangle is below its bottom edge, the object
      will be flipped vertically.
      - If all offsets and rotation angle is 0, the object is not cropped.

      After cropping, the content in the crop rectangle will be stretched to fit
      its container.
    type: object
    properties:
      angle:
        format: float
        description: |-
          The rotation angle of the crop window around its center, in radians.
          Rotation angle is applied after the offset.
        type: number
      bottomOffset:
        format: float
        description: |-
          The offset specifies the bottom edge of the crop rectangle that is located
          above the original bounding rectangle bottom edge, relative to the object's
          original height.
        type: number
      leftOffset:
        format: float
        description: |-
          The offset specifies the left edge of the crop rectangle that is located to
          the right of the original bounding rectangle left edge, relative to the
          object's original width.
        type: number
      rightOffset:
        format: float
        description: |-
          The offset specifies the right edge of the crop rectangle that is located
          to the left of the original bounding rectangle right edge, relative to the
          object's original width.
        type: number
      topOffset:
        format: float
        description: |-
          The offset specifies the top edge of the crop rectangle that is located
          below the original bounding rectangle top edge, relative to the object's
          original height.
        type: number
  DeleteObjectRequest:
    description: |-
      Deletes an object, either pages or
      page elements, from the
      presentation.
    type: object
    properties:
      objectId:
        description: |-
          The object ID of the page or page element to delete.

          If after a delete operation a group contains
          only 1 or no page elements, the group is also deleted.

          If a placeholder is deleted on a layout, any empty inheriting shapes are
          also deleted.
        type: string
  DeleteParagraphBulletsRequest:
    description: |-
      Deletes bullets from all of the paragraphs that overlap with the given text
      index range.

      The nesting level of each paragraph will be visually preserved by adding
      indent to the start of the corresponding paragraph.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The optional table cell location if the text to be modified is in a table
          cell. If present, the object_id must refer to a table.
      objectId:
        description: |-
          The object ID of the shape or table containing the text to delete bullets
          from.
        type: string
      textRange:
        $ref: '#/definitions/Range'
        description: The range of text to delete bullets from, based on TextElement
          indexes.
  DeleteTableColumnRequest:
    description: Deletes a column from a table.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The reference table cell location from which a column will be deleted.

          The column this cell spans will be deleted. If this is a merged cell,
          multiple columns will be deleted. If no columns remain in the table after
          this deletion, the whole table is deleted.
      tableObjectId:
        description: The table to delete columns from.
        type: string
  DeleteTableRowRequest:
    description: Deletes a row from a table.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The reference table cell location from which a row will be deleted.

          The row this cell spans will be deleted. If this is a merged cell, multiple
          rows will be deleted. If no rows remain in the table after this deletion,
          the whole table is deleted.
      tableObjectId:
        description: The table to delete rows from.
        type: string
  DeleteTextRequest:
    description: Deletes text from a shape or a table cell.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The optional table cell location if the text is to be deleted from a table
          cell. If present, the object_id must refer to a table.
      objectId:
        description: The object ID of the shape or table from which the text will
          be deleted.
        type: string
      textRange:
        $ref: '#/definitions/Range'
        description: |-
          The range of text to delete, based on TextElement indexes.

          There is always an implicit newline character at the end of a shape's or
          table cell's text that cannot be deleted. `Range.Type.ALL` will use the
          correct bounds, but care must be taken when specifying explicit bounds for
          range types `FROM_START_INDEX` and `FIXED_RANGE`. For example, if the text
          is "ABC", followed by an implicit newline, then the maximum value is 2 for
          `text_range.start_index` and 3 for `text_range.end_index`.

          Deleting text that crosses a paragraph boundary may result in changes
          to paragraph styles and lists as the two paragraphs are merged.

          Ranges that include only one code unit of a surrogate pair are expanded to
          include both code units.
  Dimension:
    description: A magnitude in a single direction in the specified units.
    type: object
    properties:
      magnitude:
        format: double
        description: The magnitude.
        type: number
      unit:
        description: The units for magnitude.
        enum:
        - UNIT_UNSPECIFIED
        - EMU
        - PT
        type: string
  DuplicateObjectRequest:
    description: |-
      Duplicates a slide or page element.

      When duplicating a slide, the duplicate slide will be created immediately
      following the specified slide. When duplicating a page element, the duplicate
      will be placed on the same page at the same position as the original.
    type: object
    properties:
      objectId:
        description: The ID of the object to duplicate.
        type: string
      objectIds:
        description: |-
          The object being duplicated may contain other objects, for example when
          duplicating a slide or a group page element. This map defines how the IDs
          of duplicated objects are generated: the keys are the IDs of the original
          objects and its values are the IDs that will be assigned to the
          corresponding duplicate object. The ID of the source object's duplicate
          may be specified in this map as well, using the same value of the
          `object_id` field as a key and the newly desired ID as the value.

          All keys must correspond to existing IDs in the presentation. All values
          must be unique in the presentation and must start with an alphanumeric
          character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining
          characters may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`). The length of the new ID must not be less than 5 or
          greater than 50.

          If any IDs of source objects are omitted from the map, a new random ID will
          be assigned. If the map is empty or unset, all duplicate objects will
          receive a new random ID.
        type: object
        additionalProperties:
          type: string
  DuplicateObjectResponse:
    description: The response of duplicating an object.
    type: object
    properties:
      objectId:
        description: The ID of the new duplicate object.
        type: string
  Group:
    description: |-
      A PageElement kind representing a
      joined collection of PageElements.
    type: object
    properties:
      children:
        description: The collection of elements in the group. The minimum size of
          a group is 2.
        type: array
        items:
          $ref: '#/definitions/PageElement'
  GroupObjectsRequest:
    description: Groups objects to create an object group. For example, groups PageElements
      to create a Group on the same page as all the children.
    type: object
    properties:
      childrenObjectIds:
        description: |-
          The object IDs of the objects to group.

          Only page elements can be grouped. There should be at least two page
          elements on the same page that are not already in another group. Some page
          elements, such as videos, tables and placeholder shapes cannot be grouped.
        type: array
        items:
          type: string
      groupObjectId:
        description: |-
          A user-supplied object ID for the group to be created.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
  GroupObjectsResponse:
    description: The result of grouping objects.
    type: object
    properties:
      objectId:
        description: The object ID of the created group.
        type: string
  Image:
    description: |-
      A PageElement kind representing an
      image.
    type: object
    properties:
      contentUrl:
        description: |-
          An URL to an image with a default lifetime of 30 minutes.
          This URL is tagged with the account of the requester. Anyone with the URL
          effectively accesses the image as the original requester. Access to the
          image may be lost if the presentation's sharing settings change.
        type: string
      imageProperties:
        $ref: '#/definitions/ImageProperties'
        description: The properties of the image.
      sourceUrl:
        description: |-
          The source URL is the URL used to insert the image. The source URL can be
          empty.
        type: string
  ImageProperties:
    description: The properties of the Image.
    type: object
    properties:
      brightness:
        format: float
        description: |-
          The brightness effect of the image. The value should be in the interval
          [-1.0, 1.0], where 0 means no effect. This property is read-only.
        type: number
      contrast:
        format: float
        description: |-
          The contrast effect of the image. The value should be in the interval
          [-1.0, 1.0], where 0 means no effect. This property is read-only.
        type: number
      cropProperties:
        $ref: '#/definitions/CropProperties'
        description: |-
          The crop properties of the image. If not set, the image is not cropped.
          This property is read-only.
      link:
        $ref: '#/definitions/Link'
        description: The hyperlink destination of the image. If unset, there is no
          link.
      outline:
        $ref: '#/definitions/Outline'
        description: The outline of the image. If not set, the image has no outline.
      recolor:
        $ref: '#/definitions/Recolor'
        description: |-
          The recolor effect of the image. If not set, the image is not recolored.
          This property is read-only.
      shadow:
        $ref: '#/definitions/Shadow'
        description: |-
          The shadow of the image. If not set, the image has no shadow. This property
          is read-only.
      transparency:
        format: float
        description: |-
          The transparency effect of the image. The value should be in the interval
          [0.0, 1.0], where 0 means no effect and 1 means completely transparent.
          This property is read-only.
        type: number
  InsertTableColumnsRequest:
    description: |-
      Inserts columns into a table.

      Other columns in the table will be resized to fit the new column.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The reference table cell location from which columns will be inserted.

          A new column will be inserted to the left (or right) of the column where
          the reference cell is. If the reference cell is a merged cell, a new
          column will be inserted to the left (or right) of the merged cell.
      insertRight:
        description: |-
          Whether to insert new columns to the right of the reference cell location.

          - `True`: insert to the right.
          - `False`: insert to the left.
        type: boolean
      number:
        format: int32
        description: The number of columns to be inserted. Maximum 20 per request.
        type: integer
      tableObjectId:
        description: The table to insert columns into.
        type: string
  InsertTableRowsRequest:
    description: Inserts rows into a table.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The reference table cell location from which rows will be inserted.

          A new row will be inserted above (or below) the row where the reference
          cell is. If the reference cell is a merged cell, a new row will be
          inserted above (or below) the merged cell.
      insertBelow:
        description: |-
          Whether to insert new rows below the reference cell location.

          - `True`: insert below the cell.
          - `False`: insert above the cell.
        type: boolean
      number:
        format: int32
        description: The number of rows to be inserted. Maximum 20 per request.
        type: integer
      tableObjectId:
        description: The table to insert rows into.
        type: string
  InsertTextRequest:
    description: Inserts text into a shape or a table cell.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The optional table cell location if the text is to be inserted into a table
          cell. If present, the object_id must refer to a table.
      insertionIndex:
        format: int32
        description: |-
          The index where the text will be inserted, in Unicode code units, based
          on TextElement indexes.

          The index is zero-based and is computed from the start of the string.
          The index may be adjusted to prevent insertions inside Unicode grapheme
          clusters. In these cases, the text will be inserted immediately after the
          grapheme cluster.
        type: integer
      objectId:
        description: The object ID of the shape or table where the text will be inserted.
        type: string
      text:
        description: |-
          The text to be inserted.

          Inserting a newline character will implicitly create a new
          ParagraphMarker at that index.
          The paragraph style of the new paragraph will be copied from the paragraph
          at the current insertion index, including lists and bullets.

          Text styles for inserted text will be determined automatically, generally
          preserving the styling of neighboring text. In most cases, the text will be
          added to the TextRun that exists at the
          insertion index.

          Some control characters (U+0000-U+0008, U+000C-U+001F) and characters
          from the Unicode Basic Multilingual Plane Private Use Area (U+E000-U+F8FF)
          will be stripped out of the inserted text.
        type: string
  LayoutPlaceholderIdMapping:
    description: |-
      The user-specified ID mapping for a placeholder that will be created on a
      slide from a specified layout.
    type: object
    properties:
      layoutPlaceholder:
        $ref: '#/definitions/Placeholder'
        description: |-
          The placeholder on a layout that will be applied to a slide. Only type and index are needed. For example, a
          predefined `TITLE_AND_BODY` layout may usually have a TITLE placeholder
          with index 0 and a BODY placeholder with index 0.
      layoutPlaceholderObjectId:
        description: |-
          The object ID of the placeholder on a layout that will be applied
          to a slide.
        type: string
      objectId:
        description: |-
          A user-supplied object ID for the placeholder identified above that to be
          created onto a slide.

          If you specify an ID, it must be unique among all pages and page elements
          in the presentation. The ID must start with an alphanumeric character or an
          underscore (matches regex `[a-zA-Z0-9_]`); remaining characters
          may include those as well as a hyphen or colon (matches regex
          `[a-zA-Z0-9_-:]`).
          The length of the ID must not be less than 5 or greater than 50.

          If you don't specify an ID, a unique one is generated.
        type: string
  LayoutProperties:
    description: |-
      The properties of Page are only
      relevant for pages with page_type LAYOUT.
    type: object
    properties:
      displayName:
        description: The human-readable name of the layout.
        type: string
      masterObjectId:
        description: The object ID of the master that this layout is based on.
        type: string
      name:
        description: The name of the layout.
        type: string
  LayoutReference:
    description: |-
      Slide layout reference. This may reference either:

      - A predefined layout
      - One of the layouts in the presentation.
    type: object
    properties:
      layoutId:
        description: 'Layout ID: the object ID of one of the layouts in the presentation.'
        type: string
      predefinedLayout:
        description: Predefined layout.
        enum:
        - PREDEFINED_LAYOUT_UNSPECIFIED
        - BLANK
        - CAPTION_ONLY
        - TITLE
        - TITLE_AND_BODY
        - TITLE_AND_TWO_COLUMNS
        - TITLE_ONLY
        - SECTION_HEADER
        - SECTION_TITLE_AND_DESCRIPTION
        - ONE_COLUMN_TEXT
        - MAIN_POINT
        - BIG_NUMBER
        type: string
  Line:
    description: |-
      A PageElement kind representing a
      non-connector line, straight connector, curved connector, or bent connector.
    type: object
    properties:
      lineProperties:
        $ref: '#/definitions/LineProperties'
        description: The properties of the line.
      lineType:
        description: The type of the line.
        enum:
        - TYPE_UNSPECIFIED
        - STRAIGHT_CONNECTOR_1
        - BENT_CONNECTOR_2
        - BENT_CONNECTOR_3
        - BENT_CONNECTOR_4
        - BENT_CONNECTOR_5
        - CURVED_CONNECTOR_2
        - CURVED_CONNECTOR_3
        - CURVED_CONNECTOR_4
        - CURVED_CONNECTOR_5
        - STRAIGHT_LINE
        type: string
  LineFill:
    description: The fill of the line.
    type: object
    properties:
      solidFill:
        $ref: '#/definitions/SolidFill'
        description: Solid color fill.
  LineProperties:
    description: |-
      The properties of the Line.

      When unset, these fields default to values that match the appearance of
      new lines created in the Slides editor.
    type: object
    properties:
      dashStyle:
        description: The dash style of the line.
        enum:
        - DASH_STYLE_UNSPECIFIED
        - SOLID
        - DOT
        - DASH
        - DASH_DOT
        - LONG_DASH
        - LONG_DASH_DOT
        type: string
      endArrow:
        description: The style of the arrow at the end of the line.
        enum:
        - ARROW_STYLE_UNSPECIFIED
        - NONE
        - STEALTH_ARROW
        - FILL_ARROW
        - FILL_CIRCLE
        - FILL_SQUARE
        - FILL_DIAMOND
        - OPEN_ARROW
        - OPEN_CIRCLE
        - OPEN_SQUARE
        - OPEN_DIAMOND
        type: string
      lineFill:
        $ref: '#/definitions/LineFill'
        description: |-
          The fill of the line. The default line fill matches the defaults for new
          lines created in the Slides editor.
      link:
        $ref: '#/definitions/Link'
        description: The hyperlink destination of the line. If unset, there is no
          link.
      startArrow:
        description: The style of the arrow at the beginning of the line.
        enum:
        - ARROW_STYLE_UNSPECIFIED
        - NONE
        - STEALTH_ARROW
        - FILL_ARROW
        - FILL_CIRCLE
        - FILL_SQUARE
        - FILL_DIAMOND
        - OPEN_ARROW
        - OPEN_CIRCLE
        - OPEN_SQUARE
        - OPEN_DIAMOND
        type: string
      weight:
        $ref: '#/definitions/Dimension'
        description: The thickness of the line.
  Link:
    description: A hypertext link.
    type: object
    properties:
      pageObjectId:
        description: |-
          If set, indicates this is a link to the specific page in this
          presentation with this ID. A page with this ID may not exist.
        type: string
      relativeLink:
        description: |-
          If set, indicates this is a link to a slide in this presentation,
          addressed by its position.
        enum:
        - RELATIVE_SLIDE_LINK_UNSPECIFIED
        - NEXT_SLIDE
        - PREVIOUS_SLIDE
        - FIRST_SLIDE
        - LAST_SLIDE
        type: string
      slideIndex:
        format: int32
        description: |-
          If set, indicates this is a link to the slide at this zero-based index
          in the presentation. There may not be a slide at this index.
        type: integer
      url:
        description: If set, indicates this is a link to the external web page at
          this URL.
        type: string
  List:
    description: |-
      A List describes the look and feel of bullets belonging to paragraphs
      associated with a list. A paragraph that is part of a list has an implicit
      reference to that list's ID.
    type: object
    properties:
      listId:
        description: The ID of the list.
        type: string
      nestingLevel:
        description: |-
          A map of nesting levels to the properties of bullets at the associated
          level. A list has at most nine levels of nesting, so the possible values
          for the keys of this map are 0 through 8, inclusive.
        type: object
        additionalProperties:
          $ref: '#/definitions/NestingLevel'
  MasterProperties:
    description: |-
      The properties of Page that are only
      relevant for pages with page_type MASTER.
    type: object
    properties:
      displayName:
        description: The human-readable name of the master.
        type: string
  MergeTableCellsRequest:
    description: Merges cells in a Table.
    type: object
    properties:
      objectId:
        description: The object ID of the table.
        type: string
      tableRange:
        $ref: '#/definitions/TableRange'
        description: |-
          The table range specifying which cells of the table to merge.

          Any text in the cells being merged will be concatenated and stored in the
          upper-left ("head") cell of the range. If the range is non-rectangular
          (which can occur in some cases where the range covers cells that are
          already merged), a 400 bad request error is returned.
  NestingLevel:
    description: |-
      Contains properties describing the look and feel of a list bullet at a given
      level of nesting.
    type: object
    properties:
      bulletStyle:
        $ref: '#/definitions/TextStyle'
        description: The style of a bullet at this level of nesting.
  NotesProperties:
    description: |-
      The properties of Page that are only
      relevant for pages with page_type NOTES.
    type: object
    properties:
      speakerNotesObjectId:
        description: |-
          The object ID of the shape on this notes page that contains the speaker
          notes for the corresponding slide.
          The actual shape may not always exist on the notes page. Inserting text
          using this object ID will automatically create the shape. In this case, the
          actual shape may have different object ID. The `GetPresentation` or
          `GetPage` action will always return the latest object ID.
        type: string
  OpaqueColor:
    description: A themeable solid color value.
    type: object
    properties:
      rgbColor:
        $ref: '#/definitions/RgbColor'
        description: An opaque RGB color.
      themeColor:
        description: An opaque theme color.
        enum:
        - THEME_COLOR_TYPE_UNSPECIFIED
        - DARK1
        - LIGHT1
        - DARK2
        - LIGHT2
        - ACCENT1
        - ACCENT2
        - ACCENT3
        - ACCENT4
        - ACCENT5
        - ACCENT6
        - HYPERLINK
        - FOLLOWED_HYPERLINK
        - TEXT1
        - BACKGROUND1
        - TEXT2
        - BACKGROUND2
        type: string
  OptionalColor:
    description: A color that can either be fully opaque or fully transparent.
    type: object
    properties:
      opaqueColor:
        $ref: '#/definitions/OpaqueColor'
        description: |-
          If set, this will be used as an opaque color. If unset, this represents
          a transparent color.
  Outline:
    description: |-
      The outline of a PageElement.

      If these fields are unset, they may be inherited from a parent placeholder
      if it exists. If there is no parent, the fields will default to the value
      used for new page elements created in the Slides editor, which may depend on
      the page element kind.
    type: object
    properties:
      dashStyle:
        description: The dash style of the outline.
        enum:
        - DASH_STYLE_UNSPECIFIED
        - SOLID
        - DOT
        - DASH
        - DASH_DOT
        - LONG_DASH
        - LONG_DASH_DOT
        type: string
      outlineFill:
        $ref: '#/definitions/OutlineFill'
        description: The fill of the outline.
      propertyState:
        description: |-
          The outline property state.

          Updating the outline on a page element will implicitly update this field
          to `RENDERED`, unless another value is specified in the same request. To
          have no outline on a page element, set this field to `NOT_RENDERED`. In
          this case, any other outline fields set in the same request will be
          ignored.
        enum:
        - RENDERED
        - NOT_RENDERED
        - INHERIT
        type: string
      weight:
        $ref: '#/definitions/Dimension'
        description: The thickness of the outline.
  OutlineFill:
    description: The fill of the outline.
    type: object
    properties:
      solidFill:
        $ref: '#/definitions/SolidFill'
        description: Solid color fill.
  Page:
    description: A page in a presentation.
    type: object
    properties:
      layoutProperties:
        $ref: '#/definitions/LayoutProperties'
        description: Layout specific properties. Only set if page_type = LAYOUT.
      masterProperties:
        $ref: '#/definitions/MasterProperties'
        description: Master specific properties. Only set if page_type = MASTER.
      notesProperties:
        $ref: '#/definitions/NotesProperties'
        description: Notes specific properties. Only set if page_type = NOTES.
      objectId:
        description: |-
          The object ID for this page. Object IDs used by
          Page and
          PageElement share the same namespace.
        type: string
      pageElements:
        description: The page elements rendered on the page.
        type: array
        items:
          $ref: '#/definitions/PageElement'
      pageProperties:
        $ref: '#/definitions/PageProperties'
        description: The properties of the page.
      pageType:
        description: The type of the page.
        enum:
        - SLIDE
        - MASTER
        - LAYOUT
        - NOTES
        - NOTES_MASTER
        type: string
      revisionId:
        description: |-
          The revision ID of the presentation containing this page. Can be used in
          update requests to assert that the presentation revision hasn't changed
          since the last read operation. Only populated if the user has edit access
          to the presentation.

          The format of the revision ID may change over time, so it should be treated
          opaquely. A returned revision ID is only guaranteed to be valid for 24
          hours after it has been returned and cannot be shared across users. If the
          revision ID is unchanged between calls, then the presentation has not
          changed. Conversely, a changed ID (for the same presentation and user)
          usually means the presentation has been updated; however, a changed ID can
          also be due to internal factors such as ID format changes.
        type: string
      slideProperties:
        $ref: '#/definitions/SlideProperties'
        description: Slide specific properties. Only set if page_type = SLIDE.
  PageBackgroundFill:
    description: The page background fill.
    type: object
    properties:
      propertyState:
        description: |-
          The background fill property state.

          Updating the fill on a page will implicitly update this field to
          `RENDERED`, unless another value is specified in the same request. To
          have no fill on a page, set this field to `NOT_RENDERED`. In this case,
          any other fill fields set in the same request will be ignored.
        enum:
        - RENDERED
        - NOT_RENDERED
        - INHERIT
        type: string
      solidFill:
        $ref: '#/definitions/SolidFill'
        description: Solid color fill.
      stretchedPictureFill:
        $ref: '#/definitions/StretchedPictureFill'
        description: Stretched picture fill.
  PageElement:
    description: A visual element rendered on a page.
    type: object
    properties:
      description:
        description: |-
          The description of the page element. Combined with title to display alt
          text.
        type: string
      elementGroup:
        $ref: '#/definitions/Group'
        description: A collection of page elements joined as a single unit.
      image:
        $ref: '#/definitions/Image'
        description: An image page element.
      line:
        $ref: '#/definitions/Line'
        description: A line page element.
      objectId:
        description: |-
          The object ID for this page element. Object IDs used by
          google.apps.slides.v1.Page and
          google.apps.slides.v1.PageElement share the same namespace.
        type: string
      shape:
        $ref: '#/definitions/Shape'
        description: A generic shape.
      sheetsChart:
        $ref: '#/definitions/SheetsChart'
        description: |-
          A linked chart embedded from Google Sheets. Unlinked charts are
          represented as images.
      size:
        $ref: '#/definitions/Size'
        description: The size of the page element.
      table:
        $ref: '#/definitions/Table'
        description: A table page element.
      title:
        description: |-
          The title of the page element. Combined with description to display alt
          text.
        type: string
      transform:
        $ref: '#/definitions/AffineTransform'
        description: |-
          The transform of the page element.

          The visual appearance of the page element is determined by its absolute
          transform. To compute the absolute transform, preconcatenate a page
          element's transform with the transforms of all of its parent groups. If the
          page element is not in a group, its absolute transform is the same as the
          value in this field.

          The initial transform for the newly created Group is always the identity transform.
      video:
        $ref: '#/definitions/Video'
        description: A video page element.
      wordArt:
        $ref: '#/definitions/WordArt'
        description: A word art page element.
  PageElementProperties:
    description: |-
      Common properties for a page element.

      Note: When you initially create a
      PageElement, the API may modify
      the values of both `size` and `transform`, but the
      visual size will be unchanged.
    type: object
    properties:
      pageObjectId:
        description: The object ID of the page where the element is located.
        type: string
      size:
        $ref: '#/definitions/Size'
        description: The size of the element.
      transform:
        $ref: '#/definitions/AffineTransform'
        description: The transform for the element.
  PageProperties:
    description: |-
      The properties of the Page.

      The page will inherit properties from the parent page. Depending on the page
      type the hierarchy is defined in either
      SlideProperties or
      LayoutProperties.
    type: object
    properties:
      colorScheme:
        $ref: '#/definitions/ColorScheme'
        description: |-
          The color scheme of the page. If unset, the color scheme is inherited from
          a parent page. If the page has no parent, the color scheme uses a default
          Slides color scheme. This field is read-only.
      pageBackgroundFill:
        $ref: '#/definitions/PageBackgroundFill'
        description: |-
          The background fill of the page. If unset, the background fill is inherited
          from a parent page if it exists. If the page has no parent, then the
          background fill defaults to the corresponding fill in the Slides editor.
  ParagraphMarker:
    description: A TextElement kind that represents the beginning of a new paragraph.
    type: object
    properties:
      bullet:
        $ref: '#/definitions/Bullet'
        description: |-
          The bullet for this paragraph. If not present, the paragraph does not
          belong to a list.
      style:
        $ref: '#/definitions/ParagraphStyle'
        description: The paragraph's style
  ParagraphStyle:
    description: |-
      Styles that apply to a whole paragraph.

      If this text is contained in a shape with a parent placeholder, then these paragraph styles may be
      inherited from the parent. Which paragraph styles are inherited depend on the
      nesting level of lists:

      * A paragraph not in a list will inherit its paragraph style from the
        paragraph at the 0 nesting level of the list inside the parent placeholder.
      * A paragraph in a list will inherit its paragraph style from the paragraph
        at its corresponding nesting level of the list inside the parent
        placeholder.

      Inherited paragraph styles are represented as unset fields in this message.
    type: object
    properties:
      alignment:
        description: The text alignment for this paragraph.
        enum:
        - ALIGNMENT_UNSPECIFIED
        - START
        - CENTER
        - END
        - JUSTIFIED
        type: string
      direction:
        description: |-
          The text direction of this paragraph. If unset, the value defaults to
          LEFT_TO_RIGHT since
          text direction is not inherited.
        enum:
        - TEXT_DIRECTION_UNSPECIFIED
        - LEFT_TO_RIGHT
        - RIGHT_TO_LEFT
        type: string
      indentEnd:
        $ref: '#/definitions/Dimension'
        description: |-
          The amount indentation for the paragraph on the side that corresponds to
          the end of the text, based on the current text direction. If unset, the
          value is inherited from the parent.
      indentFirstLine:
        $ref: '#/definitions/Dimension'
        description: |-
          The amount of indentation for the start of the first line of the paragraph.
          If unset, the value is inherited from the parent.
      indentStart:
        $ref: '#/definitions/Dimension'
        description: |-
          The amount indentation for the paragraph on the side that corresponds to
          the start of the text, based on the current text direction. If unset, the
          value is inherited from the parent.
      lineSpacing:
        format: float
        description: |-
          The amount of space between lines, as a percentage of normal, where normal
          is represented as 100.0. If unset, the value is inherited from the parent.
        type: number
      spaceAbove:
        $ref: '#/definitions/Dimension'
        description: |-
          The amount of extra space above the paragraph. If unset, the value is
          inherited from the parent.
      spaceBelow:
        $ref: '#/definitions/Dimension'
        description: |-
          The amount of extra space above the paragraph. If unset, the value is
          inherited from the parent.
      spacingMode:
        description: The spacing mode for the paragraph.
        enum:
        - SPACING_MODE_UNSPECIFIED
        - NEVER_COLLAPSE
        - COLLAPSE_LISTS
        type: string
  Placeholder:
    description: The placeholder information that uniquely identifies a placeholder
      shape.
    type: object
    properties:
      index:
        format: int32
        description: |-
          The index of the placeholder. If the same placeholder types are present in
          the same page, they would have different index values.
        type: integer
      parentObjectId:
        description: |-
          The object ID of this shape's parent placeholder.
          If unset, the parent placeholder shape does not exist, so the shape does
          not inherit properties from any other shape.
        type: string
      type:
        description: The type of the placeholder.
        enum:
        - NONE
        - BODY
        - CHART
        - CLIP_ART
        - CENTERED_TITLE
        - DIAGRAM
        - DATE_AND_TIME
        - FOOTER
        - HEADER
        - MEDIA
        - OBJECT
        - PICTURE
        - SLIDE_NUMBER
        - SUBTITLE
        - TABLE
        - TITLE
        - SLIDE_IMAGE
        type: string
  Presentation:
    description: A Google Slides presentation.
    type: object
    properties:
      layouts:
        description: |-
          The layouts in the presentation. A layout is a template that determines
          how content is arranged and styled on the slides that inherit from that
          layout.
        type: array
        items:
          $ref: '#/definitions/Page'
      locale:
        description: The locale of the presentation, as an IETF BCP 47 language tag.
        type: string
      masters:
        description: |-
          The slide masters in the presentation. A slide master contains all common
          page elements and the common properties for a set of layouts. They serve
          three purposes:

          - Placeholder shapes on a master contain the default text styles and shape
            properties of all placeholder shapes on pages that use that master.
          - The master page properties define the common page properties inherited by
            its layouts.
          - Any other shapes on the master slide will appear on all slides using that
            master, regardless of their layout.
        type: array
        items:
          $ref: '#/definitions/Page'
      notesMaster:
        $ref: '#/definitions/Page'
        description: |-
          The notes master in the presentation. It serves three purposes:

          - Placeholder shapes on a notes master contain the default text styles and
            shape properties of all placeholder shapes on notes pages. Specifically,
            a `SLIDE_IMAGE` placeholder shape contains the slide thumbnail, and a
            `BODY` placeholder shape contains the speaker notes.
          - The notes master page properties define the common page properties
            inherited by all notes pages.
          - Any other shapes on the notes master will appear on all notes pages.

          The notes master is read-only.
      pageSize:
        $ref: '#/definitions/Size'
        description: The size of pages in the presentation.
      presentationId:
        description: The ID of the presentation.
        type: string
      revisionId:
        description: |-
          The revision ID of the presentation. Can be used in update requests
          to assert that the presentation revision hasn't changed since the last
          read operation. Only populated if the user has edit access to the
          presentation.

          The format of the revision ID may change over time, so it should be treated
          opaquely. A returned revision ID is only guaranteed to be valid for 24
          hours after it has been returned and cannot be shared across users. If the
          revision ID is unchanged between calls, then the presentation has not
          changed. Conversely, a changed ID (for the same presentation and user)
          usually means the presentation has been updated; however, a changed ID can
          also be due to internal factors such as ID format changes.
        type: string
      slides:
        description: |-
          The slides in the presentation.
          A slide inherits properties from a slide layout.
        type: array
        items:
          $ref: '#/definitions/Page'
      title:
        description: The title of the presentation.
        type: string
  Range:
    description: |-
      Specifies a contiguous range of an indexed collection, such as characters in
      text.
    type: object
    properties:
      endIndex:
        format: int32
        description: |-
          The optional zero-based index of the end of the collection.
          Required for `FIXED_RANGE` ranges.
        type: integer
      startIndex:
        format: int32
        description: |-
          The optional zero-based index of the beginning of the collection.
          Required for `FIXED_RANGE` and `FROM_START_INDEX` ranges.
        type: integer
      type:
        description: The type of range.
        enum:
        - RANGE_TYPE_UNSPECIFIED
        - FIXED_RANGE
        - FROM_START_INDEX
        - ALL
        type: string
  Recolor:
    description: A recolor effect applied on an image.
    type: object
    properties:
      name:
        description: |-
          The name of the recolor effect.

          The name is determined from the `recolor_stops` by matching the gradient
          against the colors in the page's current color scheme. This property is
          read-only.
        enum:
        - NONE
        - LIGHT1
        - LIGHT2
        - LIGHT3
        - LIGHT4
        - LIGHT5
        - LIGHT6
        - LIGHT7
        - LIGHT8
        - LIGHT9
        - LIGHT10
        - DARK1
        - DARK2
        - DARK3
        - DARK4
        - DARK5
        - DARK6
        - DARK7
        - DARK8
        - DARK9
        - DARK10
        - GRAYSCALE
        - NEGATIVE
        - SEPIA
        - CUSTOM
        type: string
      recolorStops:
        description: |-
          The recolor effect is represented by a gradient, which is a list of color
          stops.

          The colors in the gradient will replace the corresponding colors at
          the same position in the color palette and apply to the image. This
          property is read-only.
        type: array
        items:
          $ref: '#/definitions/ColorStop'
  RefreshSheetsChartRequest:
    description: |-
      Refreshes an embedded Google Sheets chart by replacing it with the latest
      version of the chart from Google Sheets.

      NOTE: Refreshing charts requires  at least one of the spreadsheets.readonly,
      spreadsheets, drive.readonly, or drive OAuth scopes.
    type: object
    properties:
      objectId:
        description: The object ID of the chart to refresh.
        type: string
  ReplaceAllShapesWithImageRequest:
    description: |-
      Replaces all shapes that match the given criteria with the provided image.

      The images replacing the shapes are rectangular after being inserted into
      the presentation and do not take on the forms of the shapes.
    type: object
    properties:
      containsText:
        $ref: '#/definitions/SubstringMatchCriteria'
        description: |-
          If set, this request will replace all of the shapes that contain the
          given text.
      imageReplaceMethod:
        description: |-
          The image replace method.

          If you specify both a `replace_method` and an `image_replace_method`, the
          `image_replace_method` takes precedence.

          If you do not specify a value for `image_replace_method`, but specify a
          value for `replace_method`, then the specified `replace_method` value is
          used.

          If you do not specify either, then CENTER_INSIDE is used.
        enum:
        - IMAGE_REPLACE_METHOD_UNSPECIFIED
        - CENTER_INSIDE
        - CENTER_CROP
        type: string
      imageUrl:
        description: |-
          The image URL.

          The image is fetched once at insertion time and a copy is stored for
          display inside the presentation. Images must be less than 50MB in size,
          cannot exceed 25 megapixels, and must be in one of PNG, JPEG, or GIF
          format.

          The provided URL can be at most 2 kB in length. The URL itself is saved
          with the image, and exposed via the Image.source_url field.
        type: string
      pageObjectIds:
        description: |-
          If non-empty, limits the matches to page elements only on the given pages.

          Returns a 400 bad request error if given the page object ID of a
          notes page or a
          notes master, or if a
          page with that object ID doesn't exist in the presentation.
        type: array
        items:
          type: string
      replaceMethod:
        description: |-
          The replace method.
          Deprecated: use `image_replace_method` instead.

          If you specify both a `replace_method` and an `image_replace_method`, the
          `image_replace_method` takes precedence.
        enum:
        - CENTER_INSIDE
        - CENTER_CROP
        type: string
  ReplaceAllShapesWithImageResponse:
    description: The result of replacing shapes with an image.
    type: object
    properties:
      occurrencesChanged:
        format: int32
        description: The number of shapes replaced with images.
        type: integer
  ReplaceAllShapesWithSheetsChartRequest:
    description: |-
      Replaces all shapes that match the given criteria with the provided Google
      Sheets chart. The chart will be scaled and centered to fit within the bounds
      of the original shape.

      NOTE: Replacing shapes with a chart requires at least one of the
      spreadsheets.readonly, spreadsheets, drive.readonly, or drive OAuth scopes.
    type: object
    properties:
      chartId:
        format: int32
        description: The ID of the specific chart in the Google Sheets spreadsheet.
        type: integer
      containsText:
        $ref: '#/definitions/SubstringMatchCriteria'
        description: |-
          The criteria that the shapes must match in order to be replaced. The
          request will replace all of the shapes that contain the given text.
      linkingMode:
        description: |-
          The mode with which the chart is linked to the source spreadsheet. When
          not specified, the chart will be an image that is not linked.
        enum:
        - NOT_LINKED_IMAGE
        - LINKED
        type: string
      pageObjectIds:
        description: |-
          If non-empty, limits the matches to page elements only on the given pages.

          Returns a 400 bad request error if given the page object ID of a
          notes page or a
          notes master, or if a
          page with that object ID doesn't exist in the presentation.
        type: array
        items:
          type: string
      spreadsheetId:
        description: The ID of the Google Sheets spreadsheet that contains the chart.
        type: string
  ReplaceAllShapesWithSheetsChartResponse:
    description: The result of replacing shapes with a Google Sheets chart.
    type: object
    properties:
      occurrencesChanged:
        format: int32
        description: The number of shapes replaced with charts.
        type: integer
  ReplaceAllTextRequest:
    description: Replaces all instances of text matching a criteria with replace text.
    type: object
    properties:
      containsText:
        $ref: '#/definitions/SubstringMatchCriteria'
        description: Finds text in a shape matching this substring.
      pageObjectIds:
        description: |-
          If non-empty, limits the matches to page elements only on the given pages.

          Returns a 400 bad request error if given the page object ID of a
          notes master,
          or if a page with that object ID doesn't exist in the presentation.
        type: array
        items:
          type: string
      replaceText:
        description: The text that will replace the matched text.
        type: string
  ReplaceAllTextResponse:
    description: The result of replacing text.
    type: object
    properties:
      occurrencesChanged:
        format: int32
        description: The number of occurrences changed by replacing all text.
        type: integer
  ReplaceImageRequest:
    description: |-
      Replaces an existing image with a new image.

      Replacing an image removes some image effects from the existing image.
    type: object
    properties:
      imageObjectId:
        description: The ID of the existing image that will be replaced.
        type: string
      imageReplaceMethod:
        description: The replacement method.
        enum:
        - IMAGE_REPLACE_METHOD_UNSPECIFIED
        - CENTER_INSIDE
        - CENTER_CROP
        type: string
      url:
        description: |-
          The URL of the new image.

          The image is fetched once at insertion time and a copy is stored for
          display inside the presentation. Images must be less than 50MB in size,
          cannot exceed 25 megapixels, and must be in one of PNG, JPEG, or GIF
          format.

          The provided URL can be at most 2 kB in length. The URL itself is saved
          with the image, and exposed via the Image.source_url field.
        type: string
  Request:
    description: A single kind of update to apply to a presentation.
    type: object
    properties:
      createImage:
        $ref: '#/definitions/CreateImageRequest'
        description: Creates an image.
      createLine:
        $ref: '#/definitions/CreateLineRequest'
        description: Creates a line.
      createParagraphBullets:
        $ref: '#/definitions/CreateParagraphBulletsRequest'
        description: Creates bullets for paragraphs.
      createShape:
        $ref: '#/definitions/CreateShapeRequest'
        description: Creates a new shape.
      createSheetsChart:
        $ref: '#/definitions/CreateSheetsChartRequest'
        description: Creates an embedded Google Sheets chart.
      createSlide:
        $ref: '#/definitions/CreateSlideRequest'
        description: Creates a new slide.
      createTable:
        $ref: '#/definitions/CreateTableRequest'
        description: Creates a new table.
      createVideo:
        $ref: '#/definitions/CreateVideoRequest'
        description: Creates a video.
      deleteObject:
        $ref: '#/definitions/DeleteObjectRequest'
        description: Deletes a page or page element from the presentation.
      deleteParagraphBullets:
        $ref: '#/definitions/DeleteParagraphBulletsRequest'
        description: Deletes bullets from paragraphs.
      deleteTableColumn:
        $ref: '#/definitions/DeleteTableColumnRequest'
        description: Deletes a column from a table.
      deleteTableRow:
        $ref: '#/definitions/DeleteTableRowRequest'
        description: Deletes a row from a table.
      deleteText:
        $ref: '#/definitions/DeleteTextRequest'
        description: Deletes text from a shape or a table cell.
      duplicateObject:
        $ref: '#/definitions/DuplicateObjectRequest'
        description: Duplicates a slide or page element.
      groupObjects:
        $ref: '#/definitions/GroupObjectsRequest'
        description: Groups objects, such as page elements.
      insertTableColumns:
        $ref: '#/definitions/InsertTableColumnsRequest'
        description: Inserts columns into a table.
      insertTableRows:
        $ref: '#/definitions/InsertTableRowsRequest'
        description: Inserts rows into a table.
      insertText:
        $ref: '#/definitions/InsertTextRequest'
        description: Inserts text into a shape or table cell.
      mergeTableCells:
        $ref: '#/definitions/MergeTableCellsRequest'
        description: Merges cells in a Table.
      refreshSheetsChart:
        $ref: '#/definitions/RefreshSheetsChartRequest'
        description: Refreshes a Google Sheets chart.
      replaceAllShapesWithImage:
        $ref: '#/definitions/ReplaceAllShapesWithImageRequest'
        description: Replaces all shapes matching some criteria with an image.
      replaceAllShapesWithSheetsChart:
        $ref: '#/definitions/ReplaceAllShapesWithSheetsChartRequest'
        description: Replaces all shapes matching some criteria with a Google Sheets
          chart.
      replaceAllText:
        $ref: '#/definitions/ReplaceAllTextRequest'
        description: Replaces all instances of specified text.
      replaceImage:
        $ref: '#/definitions/ReplaceImageRequest'
        description: Replaces an existing image with a new image.
      ungroupObjects:
        $ref: '#/definitions/UngroupObjectsRequest'
        description: Ungroups objects, such as groups.
      unmergeTableCells:
        $ref: '#/definitions/UnmergeTableCellsRequest'
        description: Unmerges cells in a Table.
      updateImageProperties:
        $ref: '#/definitions/UpdateImagePropertiesRequest'
        description: Updates the properties of an Image.
      updateLineProperties:
        $ref: '#/definitions/UpdateLinePropertiesRequest'
        description: Updates the properties of a Line.
      updatePageElementAltText:
        $ref: '#/definitions/UpdatePageElementAltTextRequest'
        description: |-
          Updates the alt text title and/or description of a
          page element.
      updatePageElementTransform:
        $ref: '#/definitions/UpdatePageElementTransformRequest'
        description: Updates the transform of a page element.
      updatePageProperties:
        $ref: '#/definitions/UpdatePagePropertiesRequest'
        description: Updates the properties of a Page.
      updateParagraphStyle:
        $ref: '#/definitions/UpdateParagraphStyleRequest'
        description: Updates the styling of paragraphs within a Shape or Table.
      updateShapeProperties:
        $ref: '#/definitions/UpdateShapePropertiesRequest'
        description: Updates the properties of a Shape.
      updateSlidesPosition:
        $ref: '#/definitions/UpdateSlidesPositionRequest'
        description: Updates the position of a set of slides in the presentation.
      updateTableBorderProperties:
        $ref: '#/definitions/UpdateTableBorderPropertiesRequest'
        description: Updates the properties of the table borders in a Table.
      updateTableCellProperties:
        $ref: '#/definitions/UpdateTableCellPropertiesRequest'
        description: Updates the properties of a TableCell.
      updateTableColumnProperties:
        $ref: '#/definitions/UpdateTableColumnPropertiesRequest'
        description: |-
          Updates the properties of a Table
          column.
      updateTableRowProperties:
        $ref: '#/definitions/UpdateTableRowPropertiesRequest'
        description: Updates the properties of a Table row.
      updateTextStyle:
        $ref: '#/definitions/UpdateTextStyleRequest'
        description: Updates the styling of text within a Shape or Table.
      updateVideoProperties:
        $ref: '#/definitions/UpdateVideoPropertiesRequest'
        description: Updates the properties of a Video.
  Response:
    description: A single response from an update.
    type: object
    properties:
      createImage:
        $ref: '#/definitions/CreateImageResponse'
        description: The result of creating an image.
      createLine:
        $ref: '#/definitions/CreateLineResponse'
        description: The result of creating a line.
      createShape:
        $ref: '#/definitions/CreateShapeResponse'
        description: The result of creating a shape.
      createSheetsChart:
        $ref: '#/definitions/CreateSheetsChartResponse'
        description: The result of creating a Google Sheets chart.
      createSlide:
        $ref: '#/definitions/CreateSlideResponse'
        description: The result of creating a slide.
      createTable:
        $ref: '#/definitions/CreateTableResponse'
        description: The result of creating a table.
      createVideo:
        $ref: '#/definitions/CreateVideoResponse'
        description: The result of creating a video.
      duplicateObject:
        $ref: '#/definitions/DuplicateObjectResponse'
        description: The result of duplicating an object.
      groupObjects:
        $ref: '#/definitions/GroupObjectsResponse'
        description: The result of grouping objects.
      replaceAllShapesWithImage:
        $ref: '#/definitions/ReplaceAllShapesWithImageResponse'
        description: |-
          The result of replacing all shapes matching some criteria with an
          image.
      replaceAllShapesWithSheetsChart:
        $ref: '#/definitions/ReplaceAllShapesWithSheetsChartResponse'
        description: |-
          The result of replacing all shapes matching some criteria with a Google
          Sheets chart.
      replaceAllText:
        $ref: '#/definitions/ReplaceAllTextResponse'
        description: The result of replacing text.
  RgbColor:
    description: An RGB color.
    type: object
    properties:
      blue:
        format: float
        description: The blue component of the color, from 0.0 to 1.0.
        type: number
      green:
        format: float
        description: The green component of the color, from 0.0 to 1.0.
        type: number
      red:
        format: float
        description: The red component of the color, from 0.0 to 1.0.
        type: number
  Shadow:
    description: |-
      The shadow properties of a page element.

      If these fields are unset, they may be inherited from a parent placeholder
      if it exists. If there is no parent, the fields will default to the value
      used for new page elements created in the Slides editor, which may depend on
      the page element kind.
    type: object
    properties:
      alignment:
        description: |-
          The alignment point of the shadow, that sets the origin for translate,
          scale and skew of the shadow.
        enum:
        - RECTANGLE_POSITION_UNSPECIFIED
        - TOP_LEFT
        - TOP_CENTER
        - TOP_RIGHT
        - LEFT_CENTER
        - CENTER
        - RIGHT_CENTER
        - BOTTOM_LEFT
        - BOTTOM_CENTER
        - BOTTOM_RIGHT
        type: string
      alpha:
        format: float
        description: The alpha of the shadow's color, from 0.0 to 1.0.
        type: number
      blurRadius:
        $ref: '#/definitions/Dimension'
        description: |-
          The radius of the shadow blur. The larger the radius, the more diffuse the
          shadow becomes.
      color:
        $ref: '#/definitions/OpaqueColor'
        description: The shadow color value.
      propertyState:
        description: |-
          The shadow property state.

          Updating the shadow on a page element will implicitly update this field to
          `RENDERED`, unless another value is specified in the same request. To have
          no shadow on a page element, set this field to `NOT_RENDERED`. In this
          case, any other shadow fields set in the same request will be ignored.
        enum:
        - RENDERED
        - NOT_RENDERED
        - INHERIT
        type: string
      rotateWithShape:
        description: Whether the shadow should rotate with the shape.
        type: boolean
      transform:
        $ref: '#/definitions/AffineTransform'
        description: |-
          Transform that encodes the translate, scale, and skew of the shadow,
          relative to the alignment position.
      type:
        description: The type of the shadow.
        enum:
        - SHADOW_TYPE_UNSPECIFIED
        - OUTER
        type: string
  Shape:
    description: |-
      A PageElement kind representing a
      generic shape that does not have a more specific classification.
    type: object
    properties:
      placeholder:
        $ref: '#/definitions/Placeholder'
        description: |-
          Placeholders are shapes that are inherit from corresponding placeholders on
          layouts and masters.

          If set, the shape is a placeholder shape and any inherited properties
          can be resolved by looking at the parent placeholder identified by the
          Placeholder.parent_object_id field.
      shapeProperties:
        $ref: '#/definitions/ShapeProperties'
        description: The properties of the shape.
      shapeType:
        description: The type of the shape.
        enum:
        - TYPE_UNSPECIFIED
        - TEXT_BOX
        - RECTANGLE
        - ROUND_RECTANGLE
        - ELLIPSE
        - ARC
        - BENT_ARROW
        - BENT_UP_ARROW
        - BEVEL
        - BLOCK_ARC
        - BRACE_PAIR
        - BRACKET_PAIR
        - CAN
        - CHEVRON
        - CHORD
        - CLOUD
        - CORNER
        - CUBE
        - CURVED_DOWN_ARROW
        - CURVED_LEFT_ARROW
        - CURVED_RIGHT_ARROW
        - CURVED_UP_ARROW
        - DECAGON
        - DIAGONAL_STRIPE
        - DIAMOND
        - DODECAGON
        - DONUT
        - DOUBLE_WAVE
        - DOWN_ARROW
        - DOWN_ARROW_CALLOUT
        - FOLDED_CORNER
        - FRAME
        - HALF_FRAME
        - HEART
        - HEPTAGON
        - HEXAGON
        - HOME_PLATE
        - HORIZONTAL_SCROLL
        - IRREGULAR_SEAL_1
        - IRREGULAR_SEAL_2
        - LEFT_ARROW
        - LEFT_ARROW_CALLOUT
        - LEFT_BRACE
        - LEFT_BRACKET
        - LEFT_RIGHT_ARROW
        - LEFT_RIGHT_ARROW_CALLOUT
        - LEFT_RIGHT_UP_ARROW
        - LEFT_UP_ARROW
        - LIGHTNING_BOLT
        - MATH_DIVIDE
        - MATH_EQUAL
        - MATH_MINUS
        - MATH_MULTIPLY
        - MATH_NOT_EQUAL
        - MATH_PLUS
        - MOON
        - NO_SMOKING
        - NOTCHED_RIGHT_ARROW
        - OCTAGON
        - PARALLELOGRAM
        - PENTAGON
        - PIE
        - PLAQUE
        - PLUS
        - QUAD_ARROW
        - QUAD_ARROW_CALLOUT
        - RIBBON
        - RIBBON_2
        - RIGHT_ARROW
        - RIGHT_ARROW_CALLOUT
        - RIGHT_BRACE
        - RIGHT_BRACKET
        - ROUND_1_RECTANGLE
        - ROUND_2_DIAGONAL_RECTANGLE
        - ROUND_2_SAME_RECTANGLE
        - RIGHT_TRIANGLE
        - SMILEY_FACE
        - SNIP_1_RECTANGLE
        - SNIP_2_DIAGONAL_RECTANGLE
        - SNIP_2_SAME_RECTANGLE
        - SNIP_ROUND_RECTANGLE
        - STAR_10
        - STAR_12
        - STAR_16
        - STAR_24
        - STAR_32
        - STAR_4
        - STAR_5
        - STAR_6
        - STAR_7
        - STAR_8
        - STRIPED_RIGHT_ARROW
        - SUN
        - TRAPEZOID
        - TRIANGLE
        - UP_ARROW
        - UP_ARROW_CALLOUT
        - UP_DOWN_ARROW
        - UTURN_ARROW
        - VERTICAL_SCROLL
        - WAVE
        - WEDGE_ELLIPSE_CALLOUT
        - WEDGE_RECTANGLE_CALLOUT
        - WEDGE_ROUND_RECTANGLE_CALLOUT
        - FLOW_CHART_ALTERNATE_PROCESS
        - FLOW_CHART_COLLATE
        - FLOW_CHART_CONNECTOR
        - FLOW_CHART_DECISION
        - FLOW_CHART_DELAY
        - FLOW_CHART_DISPLAY
        - FLOW_CHART_DOCUMENT
        - FLOW_CHART_EXTRACT
        - FLOW_CHART_INPUT_OUTPUT
        - FLOW_CHART_INTERNAL_STORAGE
        - FLOW_CHART_MAGNETIC_DISK
        - FLOW_CHART_MAGNETIC_DRUM
        - FLOW_CHART_MAGNETIC_TAPE
        - FLOW_CHART_MANUAL_INPUT
        - FLOW_CHART_MANUAL_OPERATION
        - FLOW_CHART_MERGE
        - FLOW_CHART_MULTIDOCUMENT
        - FLOW_CHART_OFFLINE_STORAGE
        - FLOW_CHART_OFFPAGE_CONNECTOR
        - FLOW_CHART_ONLINE_STORAGE
        - FLOW_CHART_OR
        - FLOW_CHART_PREDEFINED_PROCESS
        - FLOW_CHART_PREPARATION
        - FLOW_CHART_PROCESS
        - FLOW_CHART_PUNCHED_CARD
        - FLOW_CHART_PUNCHED_TAPE
        - FLOW_CHART_SORT
        - FLOW_CHART_SUMMING_JUNCTION
        - FLOW_CHART_TERMINATOR
        - ARROW_EAST
        - ARROW_NORTH_EAST
        - ARROW_NORTH
        - SPEECH
        - STARBURST
        - TEARDROP
        - ELLIPSE_RIBBON
        - ELLIPSE_RIBBON_2
        - CLOUD_CALLOUT
        - CUSTOM
        type: string
      text:
        $ref: '#/definitions/TextContent'
        description: The text content of the shape.
  ShapeBackgroundFill:
    description: The shape background fill.
    type: object
    properties:
      propertyState:
        description: |-
          The background fill property state.

          Updating the fill on a shape will implicitly update this field to
          `RENDERED`, unless another value is specified in the same request. To
          have no fill on a shape, set this field to `NOT_RENDERED`. In this case,
          any other fill fields set in the same request will be ignored.
        enum:
        - RENDERED
        - NOT_RENDERED
        - INHERIT
        type: string
      solidFill:
        $ref: '#/definitions/SolidFill'
        description: Solid color fill.
  ShapeProperties:
    description: |-
      The properties of a Shape.

      If the shape is a placeholder shape as determined by the
      placeholder field, then these
      properties may be inherited from a parent placeholder shape.
      Determining the rendered value of the property depends on the corresponding
      property_state field value.
    type: object
    properties:
      contentAlignment:
        description: |-
          The alignment of the content in the shape. If unspecified,
          the alignment is inherited from a parent placeholder if it exists. If the
          shape has no parent, the default alignment matches the alignment for new
          shapes created in the Slides editor.
        enum:
        - CONTENT_ALIGNMENT_UNSPECIFIED
        - CONTENT_ALIGNMENT_UNSUPPORTED
        - TOP
        - MIDDLE
        - BOTTOM
        type: string
      link:
        $ref: '#/definitions/Link'
        description: |-
          The hyperlink destination of the shape. If unset, there is no link. Links
          are not inherited from parent placeholders.
      outline:
        $ref: '#/definitions/Outline'
        description: |-
          The outline of the shape. If unset, the outline is inherited from a
          parent placeholder if it exists. If the shape has no parent, then the
          default outline depends on the shape type, matching the defaults for
          new shapes created in the Slides editor.
      shadow:
        $ref: '#/definitions/Shadow'
        description: |-
          The shadow properties of the shape. If unset, the shadow is inherited from
          a parent placeholder if it exists. If the shape has no parent, then the
          default shadow matches the defaults for new shapes created in the Slides
          editor. This property is read-only.
      shapeBackgroundFill:
        $ref: '#/definitions/ShapeBackgroundFill'
        description: |-
          The background fill of the shape. If unset, the background fill is
          inherited from a parent placeholder if it exists. If the shape has no
          parent, then the default background fill depends on the shape type,
          matching the defaults for new shapes created in the Slides editor.
  SheetsChart:
    description: |-
      A PageElement kind representing
      a linked chart embedded from Google Sheets.
    type: object
    properties:
      chartId:
        format: int32
        description: |-
          The ID of the specific chart in the Google Sheets spreadsheet that is
          embedded.
        type: integer
      contentUrl:
        description: |-
          The URL of an image of the embedded chart, with a default lifetime of 30
          minutes. This URL is tagged with the account of the requester. Anyone with
          the URL effectively accesses the image as the original requester. Access to
          the image may be lost if the presentation's sharing settings change.
        type: string
      sheetsChartProperties:
        $ref: '#/definitions/SheetsChartProperties'
        description: The properties of the Sheets chart.
      spreadsheetId:
        description: The ID of the Google Sheets spreadsheet that contains the source
          chart.
        type: string
  SheetsChartProperties:
    description: The properties of the SheetsChart.
    type: object
    properties:
      chartImageProperties:
        $ref: '#/definitions/ImageProperties'
        description: The properties of the embedded chart image.
  Size:
    description: A width and height.
    type: object
    properties:
      height:
        $ref: '#/definitions/Dimension'
        description: The height of the object.
      width:
        $ref: '#/definitions/Dimension'
        description: The width of the object.
  SlideProperties:
    description: |-
      The properties of Page that are only
      relevant for pages with page_type SLIDE.
    type: object
    properties:
      layoutObjectId:
        description: |-
          The object ID of the layout that this slide is based on. This property is
          read-only.
        type: string
      masterObjectId:
        description: |-
          The object ID of the master that this slide is based on. This property is
          read-only.
        type: string
      notesPage:
        $ref: '#/definitions/Page'
        description: |-
          The notes page that this slide is associated with. It defines the visual
          appearance of a notes page when printing or exporting slides with speaker
          notes. A notes page inherits properties from the
          notes master.
          The placeholder shape with type BODY on the notes page contains the speaker
          notes for this slide. The ID of this shape is identified by the
          speakerNotesObjectId field.
          The notes page is read-only except for the text content and styles of the
          speaker notes shape. This property is read-only.
  SolidFill:
    description: |-
      A solid color fill. The page or page element is filled entirely with the
      specified color value.

      If any field is unset, its value may be inherited from a parent placeholder
      if it exists.
    type: object
    properties:
      alpha:
        format: float
        description: |-
          The fraction of this `color` that should be applied to the pixel.
          That is, the final pixel color is defined by the equation:

            pixel color = alpha * (color) + (1.0 - alpha) * (background color)

          This means that a value of 1.0 corresponds to a solid color, whereas
          a value of 0.0 corresponds to a completely transparent color.
        type: number
      color:
        $ref: '#/definitions/OpaqueColor'
        description: The color value of the solid fill.
  StretchedPictureFill:
    description: |-
      The stretched picture fill. The page or page element is filled entirely with
      the specified picture. The picture is stretched to fit its container.
    type: object
    properties:
      contentUrl:
        description: |-
          Reading the content_url:

          An URL to a picture with a default lifetime of 30 minutes.
          This URL is tagged with the account of the requester. Anyone with the URL
          effectively accesses the picture as the original requester. Access to the
          picture may be lost if the presentation's sharing settings change.

          Writing the content_url:

          The picture is fetched once at insertion time and a copy is stored for
          display inside the presentation. Pictures must be less than 50MB in size,
          cannot exceed 25 megapixels, and must be in one of PNG, JPEG, or GIF
          format.

          The provided URL can be at most 2 kB in length.
        type: string
      size:
        $ref: '#/definitions/Size'
        description: The original size of the picture fill. This field is read-only.
  SubstringMatchCriteria:
    description: A criteria that matches a specific string of text in a shape or table.
    type: object
    properties:
      matchCase:
        description: |-
          Indicates whether the search should respect case:

          - `True`: the search is case sensitive.
          - `False`: the search is case insensitive.
        type: boolean
      text:
        description: The text to search for in the shape or table.
        type: string
  Table:
    description: |-
      A PageElement kind representing a
      table.
    type: object
    properties:
      columns:
        format: int32
        description: Number of columns in the table.
        type: integer
      horizontalBorderRows:
        description: |-
          Properties of horizontal cell borders.

          A table's horizontal cell borders are represented as a grid. The grid has
          one more row than the number of rows in the table and the same number of
          columns as the table. For example, if the table is 3 x 3, its horizontal
          borders will be represented as a grid with 4 rows and 3 columns.
        type: array
        items:
          $ref: '#/definitions/TableBorderRow'
      rows:
        format: int32
        description: Number of rows in the table.
        type: integer
      tableColumns:
        description: Properties of each column.
        type: array
        items:
          $ref: '#/definitions/TableColumnProperties'
      tableRows:
        description: |-
          Properties and contents of each row.

          Cells that span multiple rows are contained in only one of these rows and
          have a row_span greater
          than 1.
        type: array
        items:
          $ref: '#/definitions/TableRow'
      verticalBorderRows:
        description: |-
          Properties of vertical cell borders.

          A table's vertical cell borders are represented as a grid. The grid has the
          same number of rows as the table and one more column than the number of
          columns in the table. For example, if the table is 3 x 3, its vertical
          borders will be represented as a grid with 3 rows and 4 columns.
        type: array
        items:
          $ref: '#/definitions/TableBorderRow'
  TableBorderCell:
    description: The properties of each border cell.
    type: object
    properties:
      location:
        $ref: '#/definitions/TableCellLocation'
        description: The location of the border within the border table.
      tableBorderProperties:
        $ref: '#/definitions/TableBorderProperties'
        description: The border properties.
  TableBorderFill:
    description: The fill of the border.
    type: object
    properties:
      solidFill:
        $ref: '#/definitions/SolidFill'
        description: Solid fill.
  TableBorderProperties:
    description: |-
      The border styling properties of the
      TableBorderCell.
    type: object
    properties:
      dashStyle:
        description: The dash style of the border.
        enum:
        - DASH_STYLE_UNSPECIFIED
        - SOLID
        - DOT
        - DASH
        - DASH_DOT
        - LONG_DASH
        - LONG_DASH_DOT
        type: string
      tableBorderFill:
        $ref: '#/definitions/TableBorderFill'
        description: The fill of the table border.
      weight:
        $ref: '#/definitions/Dimension'
        description: The thickness of the border.
  TableBorderRow:
    description: Contents of each border row in a table.
    type: object
    properties:
      tableBorderCells:
        description: |-
          Properties of each border cell. When a border's adjacent table cells are
          merged, it is not included in the response.
        type: array
        items:
          $ref: '#/definitions/TableBorderCell'
  TableCell:
    description: Properties and contents of each table cell.
    type: object
    properties:
      columnSpan:
        format: int32
        description: Column span of the cell.
        type: integer
      location:
        $ref: '#/definitions/TableCellLocation'
        description: The location of the cell within the table.
      rowSpan:
        format: int32
        description: Row span of the cell.
        type: integer
      tableCellProperties:
        $ref: '#/definitions/TableCellProperties'
        description: The properties of the table cell.
      text:
        $ref: '#/definitions/TextContent'
        description: The text content of the cell.
  TableCellBackgroundFill:
    description: The table cell background fill.
    type: object
    properties:
      propertyState:
        description: |-
          The background fill property state.

          Updating the fill on a table cell will implicitly update this field
          to `RENDERED`, unless another value is specified in the same request. To
          have no fill on a table cell, set this field to `NOT_RENDERED`. In this
          case, any other fill fields set in the same request will be ignored.
        enum:
        - RENDERED
        - NOT_RENDERED
        - INHERIT
        type: string
      solidFill:
        $ref: '#/definitions/SolidFill'
        description: Solid color fill.
  TableCellLocation:
    description: A location of a single table cell within a table.
    type: object
    properties:
      columnIndex:
        format: int32
        description: The 0-based column index.
        type: integer
      rowIndex:
        format: int32
        description: The 0-based row index.
        type: integer
  TableCellProperties:
    description: The properties of the TableCell.
    type: object
    properties:
      contentAlignment:
        description: |-
          The alignment of the content in the table cell. The default alignment
          matches the alignment for newly created table cells in the Slides editor.
        enum:
        - CONTENT_ALIGNMENT_UNSPECIFIED
        - CONTENT_ALIGNMENT_UNSUPPORTED
        - TOP
        - MIDDLE
        - BOTTOM
        type: string
      tableCellBackgroundFill:
        $ref: '#/definitions/TableCellBackgroundFill'
        description: |-
          The background fill of the table cell. The default fill matches the fill
          for newly created table cells in the Slides editor.
  TableColumnProperties:
    description: Properties of each column in a table.
    type: object
    properties:
      columnWidth:
        $ref: '#/definitions/Dimension'
        description: Width of a column.
  TableRange:
    description: "A table range represents a reference to a subset of a table.\n\n\
      It's important to note that the cells specified by a table range do not\nnecessarily\
      \ form a rectangle. For example, let's say we have a 3 x 3 table\nwhere all\
      \ the cells of the last row are merged together. The table looks\nlike this:\n\
      \n           \n  [             ]\n\nA table range with location = (0, 0), row\
      \ span = 3 and column span = 2\nspecifies the following cells:\n\n   x     x\
      \ \n  [      x      ]"
    type: object
    properties:
      columnSpan:
        format: int32
        description: The column span of the table range.
        type: integer
      location:
        $ref: '#/definitions/TableCellLocation'
        description: The starting location of the table range.
      rowSpan:
        format: int32
        description: The row span of the table range.
        type: integer
  TableRow:
    description: Properties and contents of each row in a table.
    type: object
    properties:
      rowHeight:
        $ref: '#/definitions/Dimension'
        description: Height of a row.
      tableCells:
        description: |-
          Properties and contents of each cell.

          Cells that span multiple columns are represented only once with a
          column_span greater
          than 1. As a result, the length of this collection does not always match
          the number of columns of the entire table.
        type: array
        items:
          $ref: '#/definitions/TableCell'
      tableRowProperties:
        $ref: '#/definitions/TableRowProperties'
        description: Properties of the row.
  TableRowProperties:
    description: Properties of each row in a table.
    type: object
    properties:
      minRowHeight:
        $ref: '#/definitions/Dimension'
        description: |-
          Minimum height of the row. The row will be rendered in the Slides editor at
          a height equal to or greater than this value in order to show all the text
          in the row's cell(s).
  TextContent:
    description: |-
      The general text content. The text must reside in a compatible shape (e.g.
      text box or rectangle) or a table cell in a page.
    type: object
    properties:
      lists:
        description: The bulleted lists contained in this text, keyed by list ID.
        type: object
        additionalProperties:
          $ref: '#/definitions/List'
      textElements:
        description: |-
          The text contents broken down into its component parts, including styling
          information. This property is read-only.
        type: array
        items:
          $ref: '#/definitions/TextElement'
  TextElement:
    description: |-
      A TextElement describes the content of a range of indices in the text content
      of a Shape or TableCell.
    type: object
    properties:
      autoText:
        $ref: '#/definitions/AutoText'
        description: |-
          A TextElement representing a spot in the text that is dynamically
          replaced with content that can change over time.
      endIndex:
        format: int32
        description: |-
          The zero-based end index of this text element, exclusive, in Unicode code
          units.
        type: integer
      paragraphMarker:
        $ref: '#/definitions/ParagraphMarker'
        description: |-
          A marker representing the beginning of a new paragraph.

          The `start_index` and `end_index` of this TextElement represent the
          range of the paragraph. Other TextElements with an index range contained
          inside this paragraph's range are considered to be part of this
          paragraph. The range of indices of two separate paragraphs will never
          overlap.
      startIndex:
        format: int32
        description: The zero-based start index of this text element, in Unicode code
          units.
        type: integer
      textRun:
        $ref: '#/definitions/TextRun'
        description: |-
          A TextElement representing a run of text where all of the characters
          in the run have the same TextStyle.

          The `start_index` and `end_index` of TextRuns will always be fully
          contained in the index range of a single `paragraph_marker` TextElement.
          In other words, a TextRun will never span multiple paragraphs.
  TextRun:
    description: |-
      A TextElement kind that represents a run of text that all has the same
      styling.
    type: object
    properties:
      content:
        description: The text of this run.
        type: string
      style:
        $ref: '#/definitions/TextStyle'
        description: The styling applied to this run.
  TextStyle:
    description: |-
      Represents the styling that can be applied to a TextRun.

      If this text is contained in a shape with a parent placeholder, then these text styles may be
      inherited from the parent. Which text styles are inherited depend on the
      nesting level of lists:

      * A text run in a paragraph that is not in a list will inherit its text style
        from the the newline character in the paragraph at the 0 nesting level of
        the list inside the parent placeholder.
      * A text run in a paragraph that is in a list will inherit its text style
        from the newline character in the paragraph at its corresponding nesting
        level of the list inside the parent placeholder.

      Inherited text styles are represented as unset fields in this message. If
      text is contained in a shape without a parent placeholder, unsetting these
      fields will revert the style to a value matching the defaults in the Slides
      editor.
    type: object
    properties:
      backgroundColor:
        $ref: '#/definitions/OptionalColor'
        description: |-
          The background color of the text. If set, the color is either opaque or
          transparent, depending on if the `opaque_color` field in it is set.
      baselineOffset:
        description: |-
          The text's vertical offset from its normal position.

          Text with `SUPERSCRIPT` or `SUBSCRIPT` baseline offsets is automatically
          rendered in a smaller font size, computed based on the `font_size` field.
          The `font_size` itself is not affected by changes in this field.
        enum:
        - BASELINE_OFFSET_UNSPECIFIED
        - NONE
        - SUPERSCRIPT
        - SUBSCRIPT
        type: string
      bold:
        description: Whether or not the text is rendered as bold.
        type: boolean
      fontFamily:
        description: |-
          The font family of the text.

          The font family can be any font from the Font menu in Slides or from
          [Google Fonts] (https://fonts.google.com/). If the font name is
          unrecognized, the text is rendered in `Arial`.

          Some fonts can affect the weight of the text. If an update request
          specifies values for both `font_family` and `bold`, the explicitly-set
          `bold` value is used.
        type: string
      fontSize:
        $ref: '#/definitions/Dimension'
        description: |-
          The size of the text's font. When read, the `font_size` will specified in
          points.
      foregroundColor:
        $ref: '#/definitions/OptionalColor'
        description: |-
          The color of the text itself. If set, the color is either opaque or
          transparent, depending on if the `opaque_color` field in it is set.
      italic:
        description: Whether or not the text is italicized.
        type: boolean
      link:
        $ref: '#/definitions/Link'
        description: |-
          The hyperlink destination of the text. If unset, there is no link. Links
          are not inherited from parent text.

          Changing the link in an update request causes some other changes to the
          text style of the range:

          * When setting a link, the text foreground color will be set to
            ThemeColorType.HYPERLINK and the text will
            be underlined. If these fields are modified in the same
            request, those values will be used instead of the link defaults.
          * Setting a link on a text range that overlaps with an existing link will
            also update the existing link to point to the new URL.
          * Links are not settable on newline characters. As a result, setting a link
            on a text range that crosses a paragraph boundary, such as `"ABC\n123"`,
            will separate the newline character(s) into their own text runs. The
            link will be applied separately to the runs before and after the newline.
          * Removing a link will update the text style of the range to match the
            style of the preceding text (or the default text styles if the preceding
            text is another link) unless different styles are being set in the same
            request.
      smallCaps:
        description: Whether or not the text is in small capital letters.
        type: boolean
      strikethrough:
        description: Whether or not the text is struck through.
        type: boolean
      underline:
        description: Whether or not the text is underlined.
        type: boolean
      weightedFontFamily:
        $ref: '#/definitions/WeightedFontFamily'
        description: |-
          The font family and rendered weight of the text.

          This field is an extension of `font_family` meant to support explicit font
          weights without breaking backwards compatibility. As such, when reading the
          style of a range of text, the value of `weighted_font_family#font_family`
          will always be equal to that of `font_family`. However, when writing, if
          both fields are included in the field mask (either explicitly or through
          the wildcard `"*"`), their values are reconciled as follows:

          * If `font_family` is set and `weighted_font_family` is not, the value of
            `font_family` is applied with weight `400` ("normal").
          * If both fields are set, the value of `font_family` must match that of
            `weighted_font_family#font_family`. If so, the font family and weight of
            `weighted_font_family` is applied. Otherwise, a 400 bad request error is
            returned.
          * If `weighted_font_family` is set and `font_family` is not, the font
            family and weight of `weighted_font_family` is applied.
          * If neither field is set, the font family and weight of the text inherit
            from the parent. Note that these properties cannot inherit separately
            from each other.

          If an update request specifies values for both `weighted_font_family` and
          `bold`, the `weighted_font_family` is applied first, then `bold`.

          If `weighted_font_family#weight` is not set, it defaults to `400`.

          If `weighted_font_family` is set, then `weighted_font_family#font_family`
          must also be set with a non-empty value. Otherwise, a 400 bad request error
          is returned.
  ThemeColorPair:
    description: A pair mapping a theme color type to the concrete color it represents.
    type: object
    properties:
      color:
        $ref: '#/definitions/RgbColor'
        description: The concrete color corresponding to the theme color type above.
      type:
        description: The type of the theme color.
        enum:
        - THEME_COLOR_TYPE_UNSPECIFIED
        - DARK1
        - LIGHT1
        - DARK2
        - LIGHT2
        - ACCENT1
        - ACCENT2
        - ACCENT3
        - ACCENT4
        - ACCENT5
        - ACCENT6
        - HYPERLINK
        - FOLLOWED_HYPERLINK
        - TEXT1
        - BACKGROUND1
        - TEXT2
        - BACKGROUND2
        type: string
  Thumbnail:
    description: The thumbnail of a page.
    type: object
    properties:
      contentUrl:
        description: |-
          The content URL of the thumbnail image.

          The URL to the image has a default lifetime of 30 minutes.
          This URL is tagged with the account of the requester. Anyone with the URL
          effectively accesses the image as the original requester. Access to the
          image may be lost if the presentation's sharing settings change.
          The mime type of the thumbnail image is the same as specified in the
          `GetPageThumbnailRequest`.
        type: string
      height:
        format: int32
        description: The positive height in pixels of the thumbnail image.
        type: integer
      width:
        format: int32
        description: The positive width in pixels of the thumbnail image.
        type: integer
  UngroupObjectsRequest:
    description: Ungroups objects, such as groups.
    type: object
    properties:
      objectIds:
        description: |-
          The object IDs of the objects to ungroup.

          Only groups that are not inside other
          groups can be ungrouped. All the groups
          should be on the same page. The group itself is deleted. The visual sizes
          and positions of all the children are preserved.
        type: array
        items:
          type: string
  UnmergeTableCellsRequest:
    description: Unmerges cells in a Table.
    type: object
    properties:
      objectId:
        description: The object ID of the table.
        type: string
      tableRange:
        $ref: '#/definitions/TableRange'
        description: |-
          The table range specifying which cells of the table to unmerge.

          All merged cells in this range will be unmerged, and cells that are already
          unmerged will not be affected. If the range has no merged cells, the
          request will do nothing. If there is text in any of the merged cells, the
          text will remain in the upper-left ("head") cell of the resulting block of
          unmerged cells.
  UpdateImagePropertiesRequest:
    description: Update the properties of an Image.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `imageProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the image outline color, set `fields` to
          `"outline.outlineFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      imageProperties:
        $ref: '#/definitions/ImageProperties'
        description: The image properties to update.
      objectId:
        description: The object ID of the image the updates are applied to.
        type: string
  UpdateLinePropertiesRequest:
    description: Updates the properties of a Line.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `lineProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the line solid fill color, set `fields` to
          `"lineFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      lineProperties:
        $ref: '#/definitions/LineProperties'
        description: The line properties to update.
      objectId:
        description: The object ID of the line the update is applied to.
        type: string
  UpdatePageElementAltTextRequest:
    description: |-
      Updates the alt text title and/or description of a
      page element.
    type: object
    properties:
      description:
        description: |-
          The updated alt text description of the page element. If unset the existing
          value will be maintained. The description is exposed to screen readers
          and other accessibility interfaces. Only use human readable values related
          to the content of the page element.
        type: string
      objectId:
        description: The object ID of the page element the updates are applied to.
        type: string
      title:
        description: |-
          The updated alt text title of the page element. If unset the
          existing value will be maintained. The title is exposed to screen readers
          and other accessibility interfaces. Only use human readable values related
          to the content of the page element.
        type: string
  UpdatePageElementTransformRequest:
    description: |-
      Updates the transform of a page element.

      Updating the transform of a group will change the absolute transform of the
      page elements in that group, which can change their visual appearance. See
      the documentation for PageElement.transform for more details.
    type: object
    properties:
      applyMode:
        description: The apply mode of the transform update.
        enum:
        - APPLY_MODE_UNSPECIFIED
        - RELATIVE
        - ABSOLUTE
        type: string
      objectId:
        description: The object ID of the page element to update.
        type: string
      transform:
        $ref: '#/definitions/AffineTransform'
        description: The input transform matrix used to update the page element.
  UpdatePagePropertiesRequest:
    description: Updates the properties of a Page.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `pageProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the page background solid fill color, set `fields`
          to `"pageBackgroundFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the page the update is applied to.
        type: string
      pageProperties:
        $ref: '#/definitions/PageProperties'
        description: The page properties to update.
  UpdateParagraphStyleRequest:
    description: |-
      Updates the styling for all of the paragraphs within a Shape or Table that
      overlap with the given text index range.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The location of the cell in the table containing the paragraph(s) to
          style. If `object_id` refers to a table, `cell_location` must have a value.
          Otherwise, it must not.
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `style` is implied and
          should not be specified. A single `"*"` can be used as short-hand for
          listing every field.

          For example, to update the paragraph alignment, set `fields` to
          `"alignment"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the shape or table with the text to be styled.
        type: string
      style:
        $ref: '#/definitions/ParagraphStyle'
        description: The paragraph's style.
      textRange:
        $ref: '#/definitions/Range'
        description: The range of text containing the paragraph(s) to style.
  UpdateShapePropertiesRequest:
    description: Update the properties of a Shape.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `shapeProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the shape background solid fill color, set `fields`
          to `"shapeBackgroundFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the shape the updates are applied to.
        type: string
      shapeProperties:
        $ref: '#/definitions/ShapeProperties'
        description: The shape properties to update.
  UpdateSlidesPositionRequest:
    description: Updates the position of slides in the presentation.
    type: object
    properties:
      insertionIndex:
        format: int32
        description: |-
          The index where the slides should be inserted, based on the slide
          arrangement before the move takes place. Must be between zero and the
          number of slides in the presentation, inclusive.
        type: integer
      slideObjectIds:
        description: |-
          The IDs of the slides in the presentation that should be moved.
          The slides in this list must be in existing presentation order, without
          duplicates.
        type: array
        items:
          type: string
  UpdateTableBorderPropertiesRequest:
    description: Updates the properties of the table borders in a Table.
    type: object
    properties:
      borderPosition:
        description: |-
          The border position in the table range the updates should apply to. If a
          border position is not specified, the updates will apply to all borders in
          the table range.
        enum:
        - ALL
        - BOTTOM
        - INNER
        - INNER_HORIZONTAL
        - INNER_VERTICAL
        - LEFT
        - OUTER
        - RIGHT
        - TOP
        type: string
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `tableBorderProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the table border solid fill color, set
          `fields` to `"tableBorderFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the table.
        type: string
      tableBorderProperties:
        $ref: '#/definitions/TableBorderProperties'
        description: The table border properties to update.
      tableRange:
        $ref: '#/definitions/TableRange'
        description: |-
          The table range representing the subset of the table to which the updates
          are applied. If a table range is not specified, the updates will apply to
          the entire table.
  UpdateTableCellPropertiesRequest:
    description: Update the properties of a TableCell.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `tableCellProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the table cell background solid fill color, set
          `fields` to `"tableCellBackgroundFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the table.
        type: string
      tableCellProperties:
        $ref: '#/definitions/TableCellProperties'
        description: The table cell properties to update.
      tableRange:
        $ref: '#/definitions/TableRange'
        description: |-
          The table range representing the subset of the table to which the updates
          are applied. If a table range is not specified, the updates will apply to
          the entire table.
  UpdateTableColumnPropertiesRequest:
    description: Updates the properties of a Table column.
    type: object
    properties:
      columnIndices:
        description: |-
          The list of zero-based indices specifying which columns to update. If no
          indices are provided, all columns in the table will be updated.
        type: array
        items:
          format: int32
          type: integer
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `tableColumnProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the column width, set `fields` to `"column_width"`.

          If '"column_width"' is included in the field mask but the property is left
          unset, the column width will default to 406,400 EMU (32 points).
        type: string
      objectId:
        description: The object ID of the table.
        type: string
      tableColumnProperties:
        $ref: '#/definitions/TableColumnProperties'
        description: |-
          The table column properties to update.

          If the value of `table_column_properties#column_width` in the request is
          less than 406,400 EMU (32 points), a 400 bad request error is returned.
  UpdateTableRowPropertiesRequest:
    description: Updates the properties of a Table row.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `tableRowProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the minimum row height, set `fields` to
          `"min_row_height"`.

          If '"min_row_height"' is included in the field mask but the property is
          left unset, the minimum row height will default to 0.
        type: string
      objectId:
        description: The object ID of the table.
        type: string
      rowIndices:
        description: |-
          The list of zero-based indices specifying which rows to update. If no
          indices are provided, all rows in the table will be updated.
        type: array
        items:
          format: int32
          type: integer
      tableRowProperties:
        $ref: '#/definitions/TableRowProperties'
        description: The table row properties to update.
  UpdateTextStyleRequest:
    description: |-
      Update the styling of text in a Shape or
      Table.
    type: object
    properties:
      cellLocation:
        $ref: '#/definitions/TableCellLocation'
        description: |-
          The location of the cell in the table containing the text to style. If
          `object_id` refers to a table, `cell_location` must have a value.
          Otherwise, it must not.
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `style` is implied and
          should not be specified. A single `"*"` can be used as short-hand for
          listing every field.

          For example, to update the text style to bold, set `fields` to `"bold"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the shape or table with the text to be styled.
        type: string
      style:
        $ref: '#/definitions/TextStyle'
        description: |-
          The style(s) to set on the text.

          If the value for a particular style matches that of the parent, that style
          will be set to inherit.

          Certain text style changes may cause other changes meant to mirror the
          behavior of the Slides editor. See the documentation of
          TextStyle for more information.
      textRange:
        $ref: '#/definitions/Range'
        description: |-
          The range of text to style.

          The range may be extended to include adjacent newlines.

          If the range fully contains a paragraph belonging to a list, the
          paragraph's bullet is also updated with the matching text style.
  UpdateVideoPropertiesRequest:
    description: Update the properties of a Video.
    type: object
    properties:
      fields:
        format: google-fieldmask
        description: |-
          The fields that should be updated.

          At least one field must be specified. The root `videoProperties` is
          implied and should not be specified. A single `"*"` can be used as
          short-hand for listing every field.

          For example to update the video outline color, set `fields` to
          `"outline.outlineFill.solidFill.color"`.

          To reset a property to its default value, include its field name in the
          field mask but leave the field itself unset.
        type: string
      objectId:
        description: The object ID of the video the updates are applied to.
        type: string
      videoProperties:
        $ref: '#/definitions/VideoProperties'
        description: The video properties to update.
  Video:
    description: |-
      A PageElement kind representing a
      video.
    type: object
    properties:
      id:
        description: The video source's unique identifier for this video.
        type: string
      source:
        description: The video source.
        enum:
        - SOURCE_UNSPECIFIED
        - YOUTUBE
        type: string
      url:
        description: |-
          An URL to a video. The URL is valid as long as the source video
          exists and sharing settings do not change.
        type: string
      videoProperties:
        $ref: '#/definitions/VideoProperties'
        description: The properties of the video.
  VideoProperties:
    description: The properties of the Video.
    type: object
    properties:
      autoPlay:
        description: |-
          Whether to enable video autoplay when the page is displayed in present
          mode. Defaults to false.
        type: boolean
      end:
        format: uint32
        description: |-
          The time at which to end playback, measured in seconds from the beginning
          of the video.
          If set, the end time should be after the start time.
          If not set or if you set this to a value that exceeds the video's length,
          the video will be played until its end.
        type: integer
      mute:
        description: Whether to mute the audio during video playback. Defaults to
          false.
        type: boolean
      outline:
        $ref: '#/definitions/Outline'
        description: |-
          The outline of the video. The default outline matches the defaults for new
          videos created in the Slides editor.
      start:
        format: uint32
        description: |-
          The time at which to start playback, measured in seconds from the beginning
          of the video.
          If set, the start time should be before the end time.
          If you set this to a value that exceeds the video's length in seconds, the
          video will be played from the last second.
          If not set, the video will be played from the beginning.
        type: integer
  WeightedFontFamily:
    description: Represents a font family and weight used to style a TextRun.
    type: object
    properties:
      fontFamily:
        description: |-
          The font family of the text.

          The font family can be any font from the Font menu in Slides or from
          [Google Fonts] (https://fonts.google.com/). If the font name is
          unrecognized, the text is rendered in `Arial`.
        type: string
      weight:
        format: int32
        description: |-
          The rendered weight of the text. This field can have any value that is a
          multiple of `100` between `100` and `900`, inclusive. This range
          corresponds to the numerical values described in the CSS 2.1
          Specification, [section 15.6](https://www.w3.org/TR/CSS21/fonts.html#font-boldness),
          with non-numerical values disallowed. Weights greater than or equal to
          `700` are considered bold, and weights less than `700`are not bold. The
          default value is `400` ("normal").
        type: integer
  WordArt:
    description: |-
      A PageElement kind representing
      word art.
    type: object
    properties:
      renderedText:
        description: The text rendered as word art.
        type: string
  WriteControl:
    description: Provides control over how write requests are executed.
    type: object
    properties:
      requiredRevisionId:
        description: |-
          The revision ID of the presentation required for the write request. If
          specified and the `required_revision_id` doesn't exactly match the
          presentation's current `revision_id`, the request will not be processed and
          will return a 400 bad request error.
        type: string
parameters:
  $.xgafv:
    name: $.xgafv
    in: query
    description: V1 error format.
    type: string
    enum:
    - "1"
    - "2"
  access_token:
    name: access_token
    in: query
    description: OAuth access token.
    type: string
  alt:
    name: alt
    in: query
    description: Data format for response.
    type: string
    default: json
    enum:
    - json
    - media
    - proto
  bearer_token:
    name: bearer_token
    in: query
    description: OAuth bearer token.
    type: string
  callback:
    name: callback
    in: query
    description: JSONP
    type: string
  fields:
    name: fields
    in: query
    description: Selector specifying which fields to include in a partial response.
    type: string
  key:
    name: key
    in: query
    description: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    type: string
  oauth_token:
    name: oauth_token
    in: query
    description: OAuth 2.0 token for the current user.
    type: string
  pp:
    name: pp
    in: query
    description: Pretty-print response.
    type: boolean
    default: true
  prettyPrint:
    name: prettyPrint
    in: query
    description: Returns response with indentations and line breaks.
    type: boolean
    default: true
  quotaUser:
    name: quotaUser
    in: query
    description: Available to use for quota purposes for server-side applications.
      Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    type: string
  uploadType:
    name: uploadType
    in: query
    description: Legacy upload protocol for media (e.g. "media", "multipart").
    type: string
  upload_protocol:
    name: upload_protocol
    in: query
    description: Upload protocol for media (e.g. "raw", "multipart").
    type: string
securityDefinitions:
  Oauth2:
    type: oauth2
    description: Oauth 2.0 authentication
    flow: implicit
    authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
    scopes:
      https://www.googleapis.com/auth/drive: View and manage the files in your Google
        Drive
      https://www.googleapis.com/auth/drive.file: View and manage Google Drive files
        and folders that you have opened or created with this app
      https://www.googleapis.com/auth/drive.readonly: View the files in your Google
        Drive
      https://www.googleapis.com/auth/presentations: View and manage your Google Slides
        presentations
      https://www.googleapis.com/auth/presentations.readonly: View your Google Slides
        presentations
      https://www.googleapis.com/auth/spreadsheets: View and manage your spreadsheets
        in Google Drive
      https://www.googleapis.com/auth/spreadsheets.readonly: View your Google Spreadsheets
tags:
- name: presentations
- name: meetup-version
  description: ""
externalDocs:
  url: https://developers.google.com/slides/
